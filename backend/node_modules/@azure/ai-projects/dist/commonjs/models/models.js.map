{"version":3,"file":"models.js","sourceRoot":"","sources":["../../../src/models/models.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n\n/** Response from the list and get connections operations */\nexport interface Connection {\n  /** The friendly name of the connection, provided by the user. */\n  readonly name: string;\n  /** A unique identifier for the connection, generated by the service */\n  readonly id: string;\n  /** Category of the connection */\n  readonly type: ConnectionType;\n  /** The connection URL to be used for this service */\n  readonly target: string;\n  /** Whether the connection is tagged as the default connection of its type */\n  readonly isDefault: boolean;\n  /** The credentials used by the connection */\n  readonly credentials: BaseCredentialsUnion;\n  /** Metadata of the connection */\n  readonly metadata: Record<string, string>;\n}\n\n/** The Type (or category) of the connection */\nexport type ConnectionType =\n  | \"AzureOpenAI\"\n  | \"AzureBlob\"\n  | \"AzureStorageAccount\"\n  | \"CognitiveSearch\"\n  | \"CosmosDB\"\n  | \"ApiKey\"\n  | \"AppConfig\"\n  | \"AppInsights\"\n  | \"CustomKeys\";\n\n/** A base class for connection credentials */\nexport interface BaseCredentials {\n  /** The type of credential used by the connection */\n  /** The discriminator possible values: ApiKey, AAD, CustomKeys, SAS, None */\n  readonly type: CredentialType;\n}\n\nexport function connectionDeserializer(item: any): Connection {\n  return {\n    name: item[\"name\"],\n    id: item[\"id\"],\n    type: item[\"type\"],\n    target: item[\"target\"],\n    metadata: item[\"metadata\"],\n    isDefault: item[\"isDefault\"],\n    credentials: item[\"credentials\"]\n      ? baseCredentialsUnionDeserializer(item[\"credentials\"])\n      : { type: \"None\" },\n  };\n}\n\nexport function baseCredentialsDeserializer(item: any): BaseCredentials {\n  return {\n    type: item[\"type\"],\n  };\n}\n\n/** Alias for BaseCredentialsUnion */\nexport type BaseCredentialsUnion =\n  | ApiKeyCredentials\n  | EntraIDCredentials\n  | CustomCredential\n  | SASCredentials\n  | NoAuthenticationCredentials\n  | BaseCredentials;\n\nexport function baseCredentialsUnionDeserializer(item: any): BaseCredentialsUnion {\n  switch (item.type) {\n    case \"ApiKey\":\n      return apiKeyCredentialsDeserializer(item as ApiKeyCredentials);\n\n    case \"AAD\":\n      return entraIDCredentialsDeserializer(item as EntraIDCredentials);\n\n    case \"CustomKeys\":\n      return customCredentialDeserializer(item as CustomCredential);\n\n    case \"SAS\":\n      return sasCredentialsDeserializer(item as SASCredentials);\n\n    case \"None\":\n      return noAuthenticationCredentialsDeserializer(item as NoAuthenticationCredentials);\n\n    default:\n      return baseCredentialsDeserializer(item);\n  }\n}\n\n/** The credential type used by the connection */\nexport type CredentialType = \"ApiKey\" | \"AAD\" | \"SAS\" | \"CustomKeys\" | \"None\";\n\n/** API Key Credential definition */\nexport interface ApiKeyCredentials extends BaseCredentials {\n  /** The credential type */\n  readonly type: \"ApiKey\";\n  /** API Key */\n  readonly apiKey?: string;\n}\n\nexport function apiKeyCredentialsDeserializer(item: any): ApiKeyCredentials {\n  return {\n    type: item[\"type\"],\n    apiKey: item[\"key\"],\n  };\n}\n\n/** Entra ID credential definition */\nexport interface EntraIDCredentials extends BaseCredentials {\n  /** The credential type */\n  readonly type: \"AAD\";\n}\n\nexport function entraIDCredentialsDeserializer(item: any): EntraIDCredentials {\n  return {\n    type: item[\"type\"],\n  };\n}\n\n/** Custom credential definition */\nexport interface CustomCredential extends BaseCredentials {\n  /** The credential type */\n  readonly type: \"CustomKeys\";\n  /** The credential type */\n  readonly keys: Record<string, string>;\n}\n\nexport function customCredentialDeserializer(item: any): CustomCredential {\n  return {\n    type: item[\"type\"],\n    keys: item[\"keys\"],\n  };\n}\n\n/** Shared Access Signature (SAS) credential definition */\nexport interface SASCredentials extends BaseCredentials {\n  /** The credential type */\n  readonly type: \"SAS\";\n  /** SAS token */\n  readonly sasToken?: string;\n}\n\nexport function sasCredentialsDeserializer(item: any): SASCredentials {\n  return {\n    type: item[\"type\"],\n    sasToken: item[\"SAS\"],\n  };\n}\n\n/** Credentials that do not require authentication */\nexport interface NoAuthenticationCredentials extends BaseCredentials {\n  /** The credential type */\n  readonly type: \"None\";\n}\n\nexport function noAuthenticationCredentialsDeserializer(item: any): NoAuthenticationCredentials {\n  return {\n    type: item[\"type\"],\n  };\n}\n\n/** Paged collection of Connection items */\nexport interface _PagedConnection {\n  /** The Connection items on this page */\n  value: Connection[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\nexport function _pagedConnectionDeserializer(item: any): _PagedConnection {\n  return {\n    value: connectionArrayDeserializer(item[\"value\"]),\n    nextLink: item[\"nextLink\"],\n  };\n}\n\nexport function connectionArrayDeserializer(result: Array<Connection>): any[] {\n  return result.map((item) => {\n    return connectionDeserializer(item);\n  });\n}\n\n/** Paged collection of DatasetVersion items */\nexport interface _PagedDatasetVersion {\n  /** The DatasetVersion items on this page */\n  value: DatasetVersionUnion[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\nexport function _pagedDatasetVersionDeserializer(item: any): _PagedDatasetVersion {\n  return {\n    value: datasetVersionUnionArrayDeserializer(item[\"value\"]),\n    nextLink: item[\"nextLink\"],\n  };\n}\n\nexport function datasetVersionUnionArraySerializer(result: Array<DatasetVersionUnion>): any[] {\n  return result.map((item) => {\n    return datasetVersionUnionSerializer(item);\n  });\n}\n\nexport function datasetVersionUnionArrayDeserializer(result: Array<DatasetVersionUnion>): any[] {\n  return result.map((item) => {\n    return datasetVersionUnionDeserializer(item);\n  });\n}\n\n/** DatasetVersion Definition */\nexport interface DatasetVersion {\n  /** URI of the data. Example: https://go.microsoft.com/fwlink/?linkid=2202330 */\n  dataUri: string;\n  /** Dataset type */\n  /** The discriminator possible values: uri_file, uri_folder */\n  type: DatasetType;\n  /** Indicates if the dataset holds a reference to the storage, or the dataset manages storage itself. If true, the underlying data will not be deleted when the dataset version is deleted */\n  readonly isReference?: boolean;\n  /** The Azure Storage Account connection name. Required if startPendingUploadVersion was not called before creating the Dataset */\n  connectionName?: string;\n  /** Asset ID, a unique identifier for the asset */\n  readonly id?: string;\n  /** The name of the resource */\n  readonly name: string;\n  /** The version of the resource */\n  readonly version: string;\n  /** The asset description text. */\n  description?: string;\n  /** Tag dictionary. Tags can be added, removed, and updated. */\n  tags?: Record<string, string>;\n}\n\nexport function datasetVersionSerializer(item: DatasetVersion): any {\n  return {\n    dataUri: item[\"dataUri\"],\n    type: item[\"type\"],\n    connectionName: item[\"connectionName\"],\n    description: item[\"description\"],\n    tags: item[\"tags\"],\n  };\n}\n\nexport function datasetVersionDeserializer(item: any): DatasetVersion {\n  return {\n    dataUri: item[\"dataUri\"],\n    type: item[\"type\"],\n    isReference: item[\"isReference\"],\n    connectionName: item[\"connectionName\"],\n    id: item[\"id\"],\n    name: item[\"name\"],\n    version: item[\"version\"],\n    description: item[\"description\"],\n    tags: item[\"tags\"],\n  };\n}\n\n/** Alias for DatasetVersionUnion */\nexport type DatasetVersionUnion = FileDatasetVersion | FolderDatasetVersion | DatasetVersion;\n\nexport function datasetVersionUnionSerializer(item: DatasetVersionUnion): any {\n  switch (item.type) {\n    case \"uri_file\":\n      return fileDatasetVersionSerializer(item as FileDatasetVersion);\n\n    case \"uri_folder\":\n      return folderDatasetVersionSerializer(item as FolderDatasetVersion);\n\n    default:\n      return datasetVersionSerializer(item);\n  }\n}\n\nexport function datasetVersionUnionDeserializer(item: any): DatasetVersionUnion {\n  switch (item.type) {\n    case \"uri_file\":\n      return fileDatasetVersionDeserializer(item as FileDatasetVersion);\n\n    case \"uri_folder\":\n      return folderDatasetVersionDeserializer(item as FolderDatasetVersion);\n\n    default:\n      return datasetVersionDeserializer(item);\n  }\n}\n\n/** Enum to determine the type of data. */\nexport type DatasetType = \"uri_file\" | \"uri_folder\";\n\n/** FileDatasetVersion Definition */\nexport interface FileDatasetVersion extends DatasetVersion {\n  /** Dataset type */\n  type: \"uri_file\";\n}\n\nexport function fileDatasetVersionSerializer(item: FileDatasetVersion): any {\n  return {\n    dataUri: item[\"dataUri\"],\n    type: item[\"type\"],\n    connectionName: item[\"connectionName\"],\n    description: item[\"description\"],\n    tags: item[\"tags\"],\n  };\n}\n\nexport function fileDatasetVersionDeserializer(item: any): FileDatasetVersion {\n  return {\n    dataUri: item[\"dataUri\"],\n    type: item[\"type\"],\n    isReference: item[\"isReference\"],\n    connectionName: item[\"connectionName\"],\n    id: item[\"id\"],\n    name: item[\"name\"],\n    version: item[\"version\"],\n    description: item[\"description\"],\n    tags: item[\"tags\"],\n  };\n}\n\n/** FileDatasetVersion Definition */\nexport interface FolderDatasetVersion extends DatasetVersion {\n  /** Dataset type */\n  type: \"uri_folder\";\n}\n\nexport function folderDatasetVersionSerializer(item: FolderDatasetVersion): any {\n  return {\n    dataUri: item[\"dataUri\"],\n    type: item[\"type\"],\n    connectionName: item[\"connectionName\"],\n    description: item[\"description\"],\n    tags: item[\"tags\"],\n  };\n}\n\nexport function folderDatasetVersionDeserializer(item: any): FolderDatasetVersion {\n  return {\n    dataUri: item[\"dataUri\"],\n    type: item[\"type\"],\n    isReference: item[\"isReference\"],\n    connectionName: item[\"connectionName\"],\n    id: item[\"id\"],\n    name: item[\"name\"],\n    version: item[\"version\"],\n    description: item[\"description\"],\n    tags: item[\"tags\"],\n  };\n}\n\n/** Represents a request for a pending upload. */\nexport interface PendingUploadRequest {\n  /** If PendingUploadId is not provided, a random GUID will be used. */\n  pendingUploadId?: string;\n  /** Azure Storage Account connection name to use for generating temporary SAS token */\n  connectionName?: string;\n  /** BlobReference is the only supported type. */\n  pendingUploadType: \"BlobReference\";\n}\n\nexport function pendingUploadRequestSerializer(item: PendingUploadRequest): any {\n  return {\n    pendingUploadId: item[\"pendingUploadId\"],\n    connectionName: item[\"connectionName\"],\n    pendingUploadType: item[\"pendingUploadType\"],\n  };\n}\n\n/** Represents the response for a pending upload request */\nexport interface PendingUploadResponse {\n  /** Container-level read, write, list SAS. */\n  blobReference: BlobReference;\n  /** ID for this upload request. */\n  pendingUploadId: string;\n  /** Version of asset to be created if user did not specify version when initially creating upload */\n  version?: string;\n  /** BlobReference is the only supported type */\n  pendingUploadType: \"BlobReference\";\n}\n\nexport function pendingUploadResponseDeserializer(item: any): PendingUploadResponse {\n  return {\n    blobReference: blobReferenceDeserializer(item[\"blobReference\"]),\n    pendingUploadId: item[\"pendingUploadId\"],\n    version: item[\"version\"],\n    pendingUploadType: item[\"pendingUploadType\"],\n  };\n}\n\n/** Blob reference details. */\nexport interface BlobReference {\n  /** Blob URI path for client to upload data. Example: https://blob.windows.core.net/Container/Path */\n  blobUri: string;\n  /** ARM ID of the storage account to use. */\n  storageAccountArmId: string;\n  /** Credential info to access the storage account. */\n  credential: SasCredential;\n}\n\nexport function blobReferenceDeserializer(item: any): BlobReference {\n  return {\n    blobUri: item[\"blobUri\"],\n    storageAccountArmId: item[\"storageAccountArmId\"],\n    credential: sasCredentialDeserializer(item[\"credential\"]),\n  };\n}\n\n/** SAS Credential definition */\nexport interface SasCredential {\n  /** SAS uri */\n  readonly sasUri: string;\n  /** Type of credential */\n  readonly type: \"SAS\";\n}\n\nexport function sasCredentialDeserializer(item: any): SasCredential {\n  return {\n    sasUri: item[\"sasUri\"],\n    type: item[\"type\"],\n  };\n}\n\n/** Represents a reference to a blob for consumption */\nexport interface AssetCredentialResponse {\n  /** Credential info to access the storage account. */\n  blobReference: BlobReference;\n}\n\nexport function assetCredentialResponseDeserializer(item: any): AssetCredentialResponse {\n  return {\n    blobReference: blobReferenceDeserializer(item[\"blobReference\"]),\n  };\n}\n\n/** Paged collection of Index items */\nexport interface _PagedIndex {\n  /** The Index items on this page */\n  value: IndexUnion[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\nexport function _pagedIndexDeserializer(item: any): _PagedIndex {\n  return {\n    value: indexUnionArrayDeserializer(item[\"value\"]),\n    nextLink: item[\"nextLink\"],\n  };\n}\n\nexport function indexUnionArraySerializer(result: Array<IndexUnion>): any[] {\n  return result.map((item) => {\n    return indexUnionSerializer(item);\n  });\n}\n\nexport function indexUnionArrayDeserializer(result: Array<IndexUnion>): any[] {\n  return result.map((item) => {\n    return indexUnionDeserializer(item);\n  });\n}\n\n/** Index resource Definition */\nexport interface Index {\n  /** Type of index */\n  /** The discriminator possible values: AzureSearch, ManagedAzureSearch, CosmosDBNoSqlVectorStore */\n  type: IndexType;\n  /** Asset ID, a unique identifier for the asset */\n  readonly id?: string;\n  /** The name of the resource */\n  readonly name: string;\n  /** The version of the resource */\n  readonly version: string;\n  /** The asset description text. */\n  description?: string;\n  /** Tag dictionary. Tags can be added, removed, and updated. */\n  tags?: Record<string, string>;\n}\n\nexport function indexSerializer(item: Index): any {\n  return {\n    type: item[\"type\"],\n    description: item[\"description\"],\n    tags: item[\"tags\"],\n  };\n}\n\nexport function indexDeserializer(item: any): Index {\n  return {\n    type: item[\"type\"],\n    id: item[\"id\"],\n    name: item[\"name\"],\n    version: item[\"version\"],\n    description: item[\"description\"],\n    tags: item[\"tags\"],\n  };\n}\n\n/** Alias for IndexUnion */\nexport type IndexUnion = AzureAISearchIndex | ManagedAzureAISearchIndex | CosmosDBIndex | Index;\n\nexport function indexUnionSerializer(item: IndexUnion): any {\n  switch (item.type) {\n    case \"AzureSearch\":\n      return azureAISearchIndexSerializer(item as AzureAISearchIndex);\n\n    case \"ManagedAzureSearch\":\n      return managedAzureAISearchIndexSerializer(item as ManagedAzureAISearchIndex);\n\n    case \"CosmosDBNoSqlVectorStore\":\n      return cosmosDBIndexSerializer(item as CosmosDBIndex);\n\n    default:\n      return indexSerializer(item);\n  }\n}\n\nexport function indexUnionDeserializer(item: any): IndexUnion {\n  switch (item.type) {\n    case \"AzureSearch\":\n      return azureAISearchIndexDeserializer(item as AzureAISearchIndex);\n\n    case \"ManagedAzureSearch\":\n      return managedAzureAISearchIndexDeserializer(item as ManagedAzureAISearchIndex);\n\n    case \"CosmosDBNoSqlVectorStore\":\n      return cosmosDBIndexDeserializer(item as CosmosDBIndex);\n\n    default:\n      return indexDeserializer(item);\n  }\n}\n\n/** Type of IndexType */\nexport type IndexType = \"AzureSearch\" | \"CosmosDBNoSqlVectorStore\" | \"ManagedAzureSearch\";\n\n/** Azure AI Search Index Definition */\nexport interface AzureAISearchIndex extends Index {\n  /** Type of index */\n  type: \"AzureSearch\";\n  /** Name of connection to Azure AI Search */\n  connectionName: string;\n  /** Name of index in Azure AI Search resource to attach */\n  indexName: string;\n  /** Field mapping configuration */\n  fieldMapping?: FieldMapping;\n}\n\nexport function azureAISearchIndexSerializer(item: AzureAISearchIndex): any {\n  return {\n    type: item[\"type\"],\n    description: item[\"description\"],\n    tags: item[\"tags\"],\n    connectionName: item[\"connectionName\"],\n    indexName: item[\"indexName\"],\n    fieldMapping: !item[\"fieldMapping\"]\n      ? item[\"fieldMapping\"]\n      : fieldMappingSerializer(item[\"fieldMapping\"]),\n  };\n}\n\nexport function azureAISearchIndexDeserializer(item: any): AzureAISearchIndex {\n  return {\n    type: item[\"type\"],\n    id: item[\"id\"],\n    name: item[\"name\"],\n    version: item[\"version\"],\n    description: item[\"description\"],\n    tags: item[\"tags\"],\n    connectionName: item[\"connectionName\"],\n    indexName: item[\"indexName\"],\n    fieldMapping: !item[\"fieldMapping\"]\n      ? item[\"fieldMapping\"]\n      : fieldMappingDeserializer(item[\"fieldMapping\"]),\n  };\n}\n\n/** Field mapping configuration class */\nexport interface FieldMapping {\n  /** List of fields with text content */\n  contentFields: string[];\n  /** Path of file to be used as a source of text content */\n  filepathField?: string;\n  /** Field containing the title of the document */\n  titleField?: string;\n  /** Field containing the url of the document */\n  urlField?: string;\n  /** List of fields with vector content */\n  vectorFields?: string[];\n  /** List of fields with metadata content */\n  metadataFields?: string[];\n}\n\nexport function fieldMappingSerializer(item: FieldMapping): any {\n  return {\n    contentFields: item[\"contentFields\"].map((p: any) => {\n      return p;\n    }),\n    filepathField: item[\"filepathField\"],\n    titleField: item[\"titleField\"],\n    urlField: item[\"urlField\"],\n    vectorFields: !item[\"vectorFields\"]\n      ? item[\"vectorFields\"]\n      : item[\"vectorFields\"].map((p: any) => {\n          return p;\n        }),\n    metadataFields: !item[\"metadataFields\"]\n      ? item[\"metadataFields\"]\n      : item[\"metadataFields\"].map((p: any) => {\n          return p;\n        }),\n  };\n}\n\nexport function fieldMappingDeserializer(item: any): FieldMapping {\n  return {\n    contentFields: item[\"contentFields\"].map((p: any) => {\n      return p;\n    }),\n    filepathField: item[\"filepathField\"],\n    titleField: item[\"titleField\"],\n    urlField: item[\"urlField\"],\n    vectorFields: !item[\"vectorFields\"]\n      ? item[\"vectorFields\"]\n      : item[\"vectorFields\"].map((p: any) => {\n          return p;\n        }),\n    metadataFields: !item[\"metadataFields\"]\n      ? item[\"metadataFields\"]\n      : item[\"metadataFields\"].map((p: any) => {\n          return p;\n        }),\n  };\n}\n\n/** Managed Azure AI Search Index Definition */\nexport interface ManagedAzureAISearchIndex extends Index {\n  /** Type of index */\n  type: \"ManagedAzureSearch\";\n  /** Vector store id of managed index */\n  vectorStoreId: string;\n}\n\nexport function managedAzureAISearchIndexSerializer(item: ManagedAzureAISearchIndex): any {\n  return {\n    type: item[\"type\"],\n    description: item[\"description\"],\n    tags: item[\"tags\"],\n    vectorStoreId: item[\"vectorStoreId\"],\n  };\n}\n\nexport function managedAzureAISearchIndexDeserializer(item: any): ManagedAzureAISearchIndex {\n  return {\n    type: item[\"type\"],\n    id: item[\"id\"],\n    name: item[\"name\"],\n    version: item[\"version\"],\n    description: item[\"description\"],\n    tags: item[\"tags\"],\n    vectorStoreId: item[\"vectorStoreId\"],\n  };\n}\n\n/** CosmosDB Vector Store Index Definition */\nexport interface CosmosDBIndex extends Index {\n  /** Type of index */\n  type: \"CosmosDBNoSqlVectorStore\";\n  /** Name of connection to CosmosDB */\n  connectionName: string;\n  /** Name of the CosmosDB Database */\n  databaseName: string;\n  /** Name of CosmosDB Container */\n  containerName: string;\n  /** Embedding model configuration */\n  embeddingConfiguration: EmbeddingConfiguration;\n  /** Field mapping configuration */\n  fieldMapping: FieldMapping;\n}\n\nexport function cosmosDBIndexSerializer(item: CosmosDBIndex): any {\n  return {\n    type: item[\"type\"],\n    description: item[\"description\"],\n    tags: item[\"tags\"],\n    connectionName: item[\"connectionName\"],\n    databaseName: item[\"databaseName\"],\n    containerName: item[\"containerName\"],\n    embeddingConfiguration: embeddingConfigurationSerializer(item[\"embeddingConfiguration\"]),\n    fieldMapping: fieldMappingSerializer(item[\"fieldMapping\"]),\n  };\n}\n\nexport function cosmosDBIndexDeserializer(item: any): CosmosDBIndex {\n  return {\n    type: item[\"type\"],\n    id: item[\"id\"],\n    name: item[\"name\"],\n    version: item[\"version\"],\n    description: item[\"description\"],\n    tags: item[\"tags\"],\n    connectionName: item[\"connectionName\"],\n    databaseName: item[\"databaseName\"],\n    containerName: item[\"containerName\"],\n    embeddingConfiguration: embeddingConfigurationDeserializer(item[\"embeddingConfiguration\"]),\n    fieldMapping: fieldMappingDeserializer(item[\"fieldMapping\"]),\n  };\n}\n\n/** Embedding configuration class */\nexport interface EmbeddingConfiguration {\n  /** Deployment name of embedding model. It can point to a model deployment either in the parent AIServices or a connection. */\n  modelDeploymentName: string;\n  /** Embedding field */\n  embeddingField: string;\n}\n\nexport function embeddingConfigurationSerializer(item: EmbeddingConfiguration): any {\n  return {\n    modelDeploymentName: item[\"modelDeploymentName\"],\n    embeddingField: item[\"embeddingField\"],\n  };\n}\n\nexport function embeddingConfigurationDeserializer(item: any): EmbeddingConfiguration {\n  return {\n    modelDeploymentName: item[\"modelDeploymentName\"],\n    embeddingField: item[\"embeddingField\"],\n  };\n}\n\n/** Model Deployment Definition */\nexport interface Deployment {\n  /** The type of the deployment */\n  /** The discriminator possible values: ModelDeployment */\n  type: DeploymentType;\n  /** Name of the deployment */\n  readonly name: string;\n}\n\nexport function deploymentDeserializer(item: any): Deployment {\n  return {\n    type: item[\"type\"],\n    name: item[\"name\"],\n  };\n}\n\n/** Alias for DeploymentUnion */\nexport type DeploymentUnion = ModelDeployment | Deployment;\n\nexport function deploymentUnionDeserializer(item: any): DeploymentUnion {\n  switch (item.type) {\n    case \"ModelDeployment\":\n      return modelDeploymentDeserializer(item as ModelDeployment);\n\n    default:\n      return deploymentDeserializer(item);\n  }\n}\n\n/** Type of DeploymentType */\nexport type DeploymentType = \"ModelDeployment\";\n\n/** Model Deployment Definition */\nexport interface ModelDeployment extends Deployment {\n  /** The type of the deployment */\n  type: \"ModelDeployment\";\n  /** Publisher-specific name of the deployed model */\n  readonly modelName: string;\n  /** Publisher-specific version of the deployed model */\n  readonly modelVersion: string;\n  /** Name of the deployed model's publisher */\n  readonly modelPublisher: string;\n  /** Capabilities of deployed model */\n  readonly capabilities: Record<string, string>;\n  /** Sku of the model deployment */\n  readonly sku: Sku;\n  /** Name of the connection the deployment comes from */\n  readonly connectionName?: string;\n}\n\nexport function modelDeploymentDeserializer(item: any): ModelDeployment {\n  return {\n    type: item[\"type\"],\n    name: item[\"name\"],\n    modelName: item[\"modelName\"],\n    modelVersion: item[\"modelVersion\"],\n    modelPublisher: item[\"modelPublisher\"],\n    capabilities: item[\"capabilities\"],\n    sku: skuDeserializer(item[\"sku\"]),\n    connectionName: item[\"connectionName\"],\n  };\n}\n\n/** Sku information */\nexport interface Sku {\n  /** Sku capacity */\n  capacity: number;\n  /** Sku family */\n  family: string;\n  /** Sku name */\n  name: string;\n  /** Sku size */\n  size: string;\n  /** Sku tier */\n  tier: string;\n}\n\nexport function skuDeserializer(item: any): Sku {\n  return {\n    capacity: item[\"capacity\"],\n    family: item[\"family\"],\n    name: item[\"name\"],\n    size: item[\"size\"],\n    tier: item[\"tier\"],\n  };\n}\n\n/** Paged collection of Deployment items */\nexport interface _PagedDeployment {\n  /** The Deployment items on this page */\n  value: DeploymentUnion[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\nexport function _pagedDeploymentDeserializer(item: any): _PagedDeployment {\n  return {\n    value: deploymentUnionArrayDeserializer(item[\"value\"]),\n    nextLink: item[\"nextLink\"],\n  };\n}\n\nexport function deploymentUnionArrayDeserializer(result: Array<DeploymentUnion>): any[] {\n  return result.map((item) => {\n    return deploymentUnionDeserializer(item);\n  });\n}\n\n/** The type of pending upload. */\nexport type PendingUploadType = \"None\" | \"BlobReference\";\n\n/** Azure AI Projects API versions */\nexport enum KnownVersions {\n  /** Azure AI API version 2025-05-01. */\n  V20250501 = \"2025-05-01\",\n  /** Azure AI API version v1. */\n  V1 = \"v1\",\n}\n"]}