import type { AIProjectContext as Client } from "../index.js";
import { AzureOpenAI } from "openai";
import { ConnectionsOperations } from "../../classic/index.js";
import type { AzureOpenAIClientOptions } from "./options.js";
/**
 * Get an authenticated AzureOpenAI client (from the `openai` package) for the default
 * Azure OpenAI connection (if `connectionName` is not specified), or from the Azure OpenAI
 * resource given by its connection name.
 *
 * @param context - The AIProjectContext used to construct the client.
 * @param connections - The ConnectionsOperations used to manage connections.
 * @param options - Optional parameters.
 * @returns An authenticated AzureOpenAI client.
 * @throws ResourceNotFoundError if an Azure OpenAI connection does not exist.
 * @throws Error if the connection name is an empty string.
 * @throws HttpResponseError for other HTTP-related errors.
 */
export declare function _getAzureOpenAIClient(context: Client, connections: ConnectionsOperations, options?: AzureOpenAIClientOptions): Promise<AzureOpenAI>;
//# sourceMappingURL=operations.d.ts.map