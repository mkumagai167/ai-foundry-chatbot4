// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
/* eslint-disable @typescript-eslint/explicit-module-boundary-types */
/* eslint-disable @typescript-eslint/naming-convention */
export function connectionDeserializer(item) {
    return {
        name: item["name"],
        id: item["id"],
        type: item["type"],
        target: item["target"],
        metadata: item["metadata"],
        isDefault: item["isDefault"],
        credentials: item["credentials"]
            ? baseCredentialsUnionDeserializer(item["credentials"])
            : { type: "None" },
    };
}
export function baseCredentialsDeserializer(item) {
    return {
        type: item["type"],
    };
}
export function baseCredentialsUnionDeserializer(item) {
    switch (item.type) {
        case "ApiKey":
            return apiKeyCredentialsDeserializer(item);
        case "AAD":
            return entraIDCredentialsDeserializer(item);
        case "CustomKeys":
            return customCredentialDeserializer(item);
        case "SAS":
            return sasCredentialsDeserializer(item);
        case "None":
            return noAuthenticationCredentialsDeserializer(item);
        default:
            return baseCredentialsDeserializer(item);
    }
}
export function apiKeyCredentialsDeserializer(item) {
    return {
        type: item["type"],
        apiKey: item["key"],
    };
}
export function entraIDCredentialsDeserializer(item) {
    return {
        type: item["type"],
    };
}
export function customCredentialDeserializer(item) {
    return {
        type: item["type"],
        keys: item["keys"],
    };
}
export function sasCredentialsDeserializer(item) {
    return {
        type: item["type"],
        sasToken: item["SAS"],
    };
}
export function noAuthenticationCredentialsDeserializer(item) {
    return {
        type: item["type"],
    };
}
export function _pagedConnectionDeserializer(item) {
    return {
        value: connectionArrayDeserializer(item["value"]),
        nextLink: item["nextLink"],
    };
}
export function connectionArrayDeserializer(result) {
    return result.map((item) => {
        return connectionDeserializer(item);
    });
}
export function _pagedDatasetVersionDeserializer(item) {
    return {
        value: datasetVersionUnionArrayDeserializer(item["value"]),
        nextLink: item["nextLink"],
    };
}
export function datasetVersionUnionArraySerializer(result) {
    return result.map((item) => {
        return datasetVersionUnionSerializer(item);
    });
}
export function datasetVersionUnionArrayDeserializer(result) {
    return result.map((item) => {
        return datasetVersionUnionDeserializer(item);
    });
}
export function datasetVersionSerializer(item) {
    return {
        dataUri: item["dataUri"],
        type: item["type"],
        connectionName: item["connectionName"],
        description: item["description"],
        tags: item["tags"],
    };
}
export function datasetVersionDeserializer(item) {
    return {
        dataUri: item["dataUri"],
        type: item["type"],
        isReference: item["isReference"],
        connectionName: item["connectionName"],
        id: item["id"],
        name: item["name"],
        version: item["version"],
        description: item["description"],
        tags: item["tags"],
    };
}
export function datasetVersionUnionSerializer(item) {
    switch (item.type) {
        case "uri_file":
            return fileDatasetVersionSerializer(item);
        case "uri_folder":
            return folderDatasetVersionSerializer(item);
        default:
            return datasetVersionSerializer(item);
    }
}
export function datasetVersionUnionDeserializer(item) {
    switch (item.type) {
        case "uri_file":
            return fileDatasetVersionDeserializer(item);
        case "uri_folder":
            return folderDatasetVersionDeserializer(item);
        default:
            return datasetVersionDeserializer(item);
    }
}
export function fileDatasetVersionSerializer(item) {
    return {
        dataUri: item["dataUri"],
        type: item["type"],
        connectionName: item["connectionName"],
        description: item["description"],
        tags: item["tags"],
    };
}
export function fileDatasetVersionDeserializer(item) {
    return {
        dataUri: item["dataUri"],
        type: item["type"],
        isReference: item["isReference"],
        connectionName: item["connectionName"],
        id: item["id"],
        name: item["name"],
        version: item["version"],
        description: item["description"],
        tags: item["tags"],
    };
}
export function folderDatasetVersionSerializer(item) {
    return {
        dataUri: item["dataUri"],
        type: item["type"],
        connectionName: item["connectionName"],
        description: item["description"],
        tags: item["tags"],
    };
}
export function folderDatasetVersionDeserializer(item) {
    return {
        dataUri: item["dataUri"],
        type: item["type"],
        isReference: item["isReference"],
        connectionName: item["connectionName"],
        id: item["id"],
        name: item["name"],
        version: item["version"],
        description: item["description"],
        tags: item["tags"],
    };
}
export function pendingUploadRequestSerializer(item) {
    return {
        pendingUploadId: item["pendingUploadId"],
        connectionName: item["connectionName"],
        pendingUploadType: item["pendingUploadType"],
    };
}
export function pendingUploadResponseDeserializer(item) {
    return {
        blobReference: blobReferenceDeserializer(item["blobReference"]),
        pendingUploadId: item["pendingUploadId"],
        version: item["version"],
        pendingUploadType: item["pendingUploadType"],
    };
}
export function blobReferenceDeserializer(item) {
    return {
        blobUri: item["blobUri"],
        storageAccountArmId: item["storageAccountArmId"],
        credential: sasCredentialDeserializer(item["credential"]),
    };
}
export function sasCredentialDeserializer(item) {
    return {
        sasUri: item["sasUri"],
        type: item["type"],
    };
}
export function assetCredentialResponseDeserializer(item) {
    return {
        blobReference: blobReferenceDeserializer(item["blobReference"]),
    };
}
export function _pagedIndexDeserializer(item) {
    return {
        value: indexUnionArrayDeserializer(item["value"]),
        nextLink: item["nextLink"],
    };
}
export function indexUnionArraySerializer(result) {
    return result.map((item) => {
        return indexUnionSerializer(item);
    });
}
export function indexUnionArrayDeserializer(result) {
    return result.map((item) => {
        return indexUnionDeserializer(item);
    });
}
export function indexSerializer(item) {
    return {
        type: item["type"],
        description: item["description"],
        tags: item["tags"],
    };
}
export function indexDeserializer(item) {
    return {
        type: item["type"],
        id: item["id"],
        name: item["name"],
        version: item["version"],
        description: item["description"],
        tags: item["tags"],
    };
}
export function indexUnionSerializer(item) {
    switch (item.type) {
        case "AzureSearch":
            return azureAISearchIndexSerializer(item);
        case "ManagedAzureSearch":
            return managedAzureAISearchIndexSerializer(item);
        case "CosmosDBNoSqlVectorStore":
            return cosmosDBIndexSerializer(item);
        default:
            return indexSerializer(item);
    }
}
export function indexUnionDeserializer(item) {
    switch (item.type) {
        case "AzureSearch":
            return azureAISearchIndexDeserializer(item);
        case "ManagedAzureSearch":
            return managedAzureAISearchIndexDeserializer(item);
        case "CosmosDBNoSqlVectorStore":
            return cosmosDBIndexDeserializer(item);
        default:
            return indexDeserializer(item);
    }
}
export function azureAISearchIndexSerializer(item) {
    return {
        type: item["type"],
        description: item["description"],
        tags: item["tags"],
        connectionName: item["connectionName"],
        indexName: item["indexName"],
        fieldMapping: !item["fieldMapping"]
            ? item["fieldMapping"]
            : fieldMappingSerializer(item["fieldMapping"]),
    };
}
export function azureAISearchIndexDeserializer(item) {
    return {
        type: item["type"],
        id: item["id"],
        name: item["name"],
        version: item["version"],
        description: item["description"],
        tags: item["tags"],
        connectionName: item["connectionName"],
        indexName: item["indexName"],
        fieldMapping: !item["fieldMapping"]
            ? item["fieldMapping"]
            : fieldMappingDeserializer(item["fieldMapping"]),
    };
}
export function fieldMappingSerializer(item) {
    return {
        contentFields: item["contentFields"].map((p) => {
            return p;
        }),
        filepathField: item["filepathField"],
        titleField: item["titleField"],
        urlField: item["urlField"],
        vectorFields: !item["vectorFields"]
            ? item["vectorFields"]
            : item["vectorFields"].map((p) => {
                return p;
            }),
        metadataFields: !item["metadataFields"]
            ? item["metadataFields"]
            : item["metadataFields"].map((p) => {
                return p;
            }),
    };
}
export function fieldMappingDeserializer(item) {
    return {
        contentFields: item["contentFields"].map((p) => {
            return p;
        }),
        filepathField: item["filepathField"],
        titleField: item["titleField"],
        urlField: item["urlField"],
        vectorFields: !item["vectorFields"]
            ? item["vectorFields"]
            : item["vectorFields"].map((p) => {
                return p;
            }),
        metadataFields: !item["metadataFields"]
            ? item["metadataFields"]
            : item["metadataFields"].map((p) => {
                return p;
            }),
    };
}
export function managedAzureAISearchIndexSerializer(item) {
    return {
        type: item["type"],
        description: item["description"],
        tags: item["tags"],
        vectorStoreId: item["vectorStoreId"],
    };
}
export function managedAzureAISearchIndexDeserializer(item) {
    return {
        type: item["type"],
        id: item["id"],
        name: item["name"],
        version: item["version"],
        description: item["description"],
        tags: item["tags"],
        vectorStoreId: item["vectorStoreId"],
    };
}
export function cosmosDBIndexSerializer(item) {
    return {
        type: item["type"],
        description: item["description"],
        tags: item["tags"],
        connectionName: item["connectionName"],
        databaseName: item["databaseName"],
        containerName: item["containerName"],
        embeddingConfiguration: embeddingConfigurationSerializer(item["embeddingConfiguration"]),
        fieldMapping: fieldMappingSerializer(item["fieldMapping"]),
    };
}
export function cosmosDBIndexDeserializer(item) {
    return {
        type: item["type"],
        id: item["id"],
        name: item["name"],
        version: item["version"],
        description: item["description"],
        tags: item["tags"],
        connectionName: item["connectionName"],
        databaseName: item["databaseName"],
        containerName: item["containerName"],
        embeddingConfiguration: embeddingConfigurationDeserializer(item["embeddingConfiguration"]),
        fieldMapping: fieldMappingDeserializer(item["fieldMapping"]),
    };
}
export function embeddingConfigurationSerializer(item) {
    return {
        modelDeploymentName: item["modelDeploymentName"],
        embeddingField: item["embeddingField"],
    };
}
export function embeddingConfigurationDeserializer(item) {
    return {
        modelDeploymentName: item["modelDeploymentName"],
        embeddingField: item["embeddingField"],
    };
}
export function deploymentDeserializer(item) {
    return {
        type: item["type"],
        name: item["name"],
    };
}
export function deploymentUnionDeserializer(item) {
    switch (item.type) {
        case "ModelDeployment":
            return modelDeploymentDeserializer(item);
        default:
            return deploymentDeserializer(item);
    }
}
export function modelDeploymentDeserializer(item) {
    return {
        type: item["type"],
        name: item["name"],
        modelName: item["modelName"],
        modelVersion: item["modelVersion"],
        modelPublisher: item["modelPublisher"],
        capabilities: item["capabilities"],
        sku: skuDeserializer(item["sku"]),
        connectionName: item["connectionName"],
    };
}
export function skuDeserializer(item) {
    return {
        capacity: item["capacity"],
        family: item["family"],
        name: item["name"],
        size: item["size"],
        tier: item["tier"],
    };
}
export function _pagedDeploymentDeserializer(item) {
    return {
        value: deploymentUnionArrayDeserializer(item["value"]),
        nextLink: item["nextLink"],
    };
}
export function deploymentUnionArrayDeserializer(result) {
    return result.map((item) => {
        return deploymentUnionDeserializer(item);
    });
}
/** Azure AI Projects API versions */
export var KnownVersions;
(function (KnownVersions) {
    /** Azure AI API version 2025-05-01. */
    KnownVersions["V20250501"] = "2025-05-01";
    /** Azure AI API version v1. */
    KnownVersions["V1"] = "v1";
})(KnownVersions || (KnownVersions = {}));
//# sourceMappingURL=models.js.map