{"version":3,"file":"operations.js","sourceRoot":"","sources":["../../../src/api/operations.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { AgentsContext as Client } from \"./index.js\";\nimport type {\n  Agent,\n  _AgentsPagedResultAgent,\n  AgentDeletionStatus,\n  ThreadRun,\n} from \"../models/models.js\";\nimport {\n  toolResourcesSerializer,\n  toolDefinitionUnionArraySerializer,\n  agentsResponseFormatOptionSerializer,\n  agentDeserializer,\n  agentV1ErrorDeserializer,\n  _agentsPagedResultAgentDeserializer,\n  agentDeletionStatusDeserializer,\n  agentThreadCreationOptionsSerializer,\n  truncationObjectSerializer,\n  agentsToolChoiceOptionSerializer,\n  threadRunDeserializer,\n  MessageStreamEvent,\n  RunStepStreamEvent,\n  RunStreamEvent,\n  ToolOutput,\n  messageDeltaChunkDeserializer,\n  runStepDeltaChunkDeserializer,\n  runStepDeserializer,\n  threadMessageDeserializer,\n} from \"../models/models.js\";\nimport type {\n  CreateThreadAndRunOptionalParams,\n  DeleteAgentOptionalParams,\n  UpdateAgentOptionalParams,\n  GetAgentOptionalParams,\n  ListAgentsOptionalParams,\n  CreateAgentOptionalParams,\n} from \"./options.js\";\nimport type { PagedAsyncIterableIterator } from \"../static-helpers/pagingHelpers.js\";\nimport { buildPagedAsyncIterator } from \"../static-helpers/pagingHelpers.js\";\nimport { expandUrlTemplate } from \"../static-helpers/urlTemplate.js\";\nimport type { StreamableMethod, PathUncheckedResponse } from \"@azure-rest/core-client\";\nimport { createRestError, operationOptionsToRequestParameters } from \"@azure-rest/core-client\";\nimport type {\n  AgentEventMessage,\n  AgentEventMessageStream,\n  AgentEventStreamData,\n  AgentRunResponse,\n} from \"../models/streamingModels.js\";\nimport type {\n  RunsCreateRunOptionalParams,\n  RunsSubmitToolOutputsToRunOptionalParams,\n} from \"./runs/options.js\";\nimport type { EventMessageStream, EventMessage } from \"@azure/core-sse\";\nimport { createSseStream } from \"@azure/core-sse\";\nimport { isNodeLike } from \"@azure/core-util\";\nimport type { IncomingMessage } from \"http\";\nimport { logger } from \"../logger.js\";\nimport { _createRunSend, _submitToolOutputsToRunSend } from \"./runs/operations.js\";\n\nexport function _createThreadAndRunSend(\n  context: Client,\n  assistantId: string,\n  options: CreateThreadAndRunOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/threads/runs{?api-version}\",\n    {\n      \"api-version\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).post({\n    ...operationOptionsToRequestParameters(options),\n    contentType: \"application/json\",\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n    body: {\n      assistant_id: assistantId,\n      thread: !options?.thread\n        ? options?.thread\n        : agentThreadCreationOptionsSerializer(options?.thread),\n      model: options?.model,\n      instructions: options?.instructions,\n      tools: !options?.tools ? options?.tools : toolDefinitionUnionArraySerializer(options?.tools),\n      tool_resources: !options?.toolResources\n        ? options?.toolResources\n        : toolResourcesSerializer(options?.toolResources),\n      stream: options?.stream,\n      temperature: options?.temperature,\n      top_p: options?.topP,\n      max_prompt_tokens: options?.maxPromptTokens,\n      max_completion_tokens: options?.maxCompletionTokens,\n      truncation_strategy: !options?.truncationStrategy\n        ? options?.truncationStrategy\n        : truncationObjectSerializer(options?.truncationStrategy),\n      tool_choice: !options?.toolChoice\n        ? options?.toolChoice\n        : agentsToolChoiceOptionSerializer(options?.toolChoice),\n      response_format: !options?.responseFormat\n        ? options?.responseFormat\n        : agentsResponseFormatOptionSerializer(options?.responseFormat),\n      parallel_tool_calls: options?.parallelToolCalls,\n      metadata: options?.metadata,\n    },\n  });\n}\n\nexport async function _createThreadAndRunDeserialize(\n  result: PathUncheckedResponse,\n): Promise<ThreadRun> {\n  const expectedStatuses = [\"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = agentV1ErrorDeserializer(result.body);\n    throw error;\n  }\n\n  return threadRunDeserializer(result.body);\n}\n\n/** Creates a new agent thread and immediately starts a run using that new thread. */\nexport function createThreadAndRun(\n  context: Client,\n  assistantId: string,\n  options: CreateThreadAndRunOptionalParams = { requestOptions: {} },\n): AgentRunResponse {\n  async function executeCreateThreadAndRun(): Promise<ThreadRun> {\n    const result = await _createThreadAndRunSend(context, assistantId, options);\n    return _createThreadAndRunDeserialize(result);\n  }\n\n  return {\n    then: function (onFulfilled, onRejected) {\n      return executeCreateThreadAndRun().then(onFulfilled, onRejected).catch(onRejected);\n    },\n    async stream(): Promise<AgentEventMessageStream> {\n      return createThreadAndRunStreaming(context, assistantId, options);\n    },\n  };\n}\n\nexport function _deleteAgentSend(\n  context: Client,\n  assistantId: string,\n  options: DeleteAgentOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/assistants/{assistantId}{?api-version}\",\n    {\n      assistantId: assistantId,\n      \"api-version\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).delete({\n    ...operationOptionsToRequestParameters(options),\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n  });\n}\n\nexport async function _deleteAgentDeserialize(\n  result: PathUncheckedResponse,\n): Promise<AgentDeletionStatus> {\n  const expectedStatuses = [\"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = agentV1ErrorDeserializer(result.body);\n    throw error;\n  }\n\n  return agentDeletionStatusDeserializer(result.body);\n}\n\n/** Deletes an agent. */\nexport async function deleteAgent(\n  context: Client,\n  assistantId: string,\n  options: DeleteAgentOptionalParams = { requestOptions: {} },\n): Promise<AgentDeletionStatus> {\n  const result = await _deleteAgentSend(context, assistantId, options);\n  return _deleteAgentDeserialize(result);\n}\n\nexport function _updateAgentSend(\n  context: Client,\n  assistantId: string,\n  options: UpdateAgentOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/assistants/{assistantId}{?api-version}\",\n    {\n      assistantId: assistantId,\n      \"api-version\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).post({\n    ...operationOptionsToRequestParameters(options),\n    contentType: \"application/json\",\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n    body: {\n      model: options?.model,\n      name: options?.name,\n      description: options?.description,\n      instructions: options?.instructions,\n      tools: !options?.tools ? options?.tools : toolDefinitionUnionArraySerializer(options?.tools),\n      tool_resources: !options?.toolResources\n        ? options?.toolResources\n        : toolResourcesSerializer(options?.toolResources),\n      temperature: options?.temperature,\n      top_p: options?.topP,\n      response_format: !options?.responseFormat\n        ? options?.responseFormat\n        : agentsResponseFormatOptionSerializer(options?.responseFormat),\n      metadata: options?.metadata,\n    },\n  });\n}\n\nexport async function _updateAgentDeserialize(result: PathUncheckedResponse): Promise<Agent> {\n  const expectedStatuses = [\"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = agentV1ErrorDeserializer(result.body);\n    throw error;\n  }\n\n  return agentDeserializer(result.body);\n}\n\n/** Modifies an existing agent. */\nexport async function updateAgent(\n  context: Client,\n  assistantId: string,\n  options: UpdateAgentOptionalParams = { requestOptions: {} },\n): Promise<Agent> {\n  const result = await _updateAgentSend(context, assistantId, options);\n  return _updateAgentDeserialize(result);\n}\n\nexport function _getAgentSend(\n  context: Client,\n  assistantId: string,\n  options: GetAgentOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/assistants/{assistantId}{?api-version}\",\n    {\n      assistantId: assistantId,\n      \"api-version\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).get({\n    ...operationOptionsToRequestParameters(options),\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n  });\n}\n\nexport async function _getAgentDeserialize(result: PathUncheckedResponse): Promise<Agent> {\n  const expectedStatuses = [\"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = agentV1ErrorDeserializer(result.body);\n    throw error;\n  }\n\n  return agentDeserializer(result.body);\n}\n\n/** Retrieves an existing agent. */\nexport async function getAgent(\n  context: Client,\n  assistantId: string,\n  options: GetAgentOptionalParams = { requestOptions: {} },\n): Promise<Agent> {\n  const result = await _getAgentSend(context, assistantId, options);\n  return _getAgentDeserialize(result);\n}\n\nexport function _listAgentsSend(\n  context: Client,\n  options: ListAgentsOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/assistants{?api-version,limit,order,after,before}\",\n    {\n      \"api-version\": context.apiVersion,\n      limit: options?.limit,\n      order: options?.order,\n      after: options?.after,\n      before: options?.before,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).get({\n    ...operationOptionsToRequestParameters(options),\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n  });\n}\n\nexport async function _listAgentsDeserialize(\n  result: PathUncheckedResponse,\n): Promise<_AgentsPagedResultAgent> {\n  const expectedStatuses = [\"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = agentV1ErrorDeserializer(result.body);\n    throw error;\n  }\n\n  return _agentsPagedResultAgentDeserializer(result.body);\n}\n\n/** Gets a list of agents that were previously created. */\nexport function listAgents(\n  context: Client,\n  options: ListAgentsOptionalParams = { requestOptions: {} },\n): PagedAsyncIterableIterator<Agent> {\n  return buildPagedAsyncIterator(\n    context,\n    () => _listAgentsSend(context, options),\n    _listAgentsDeserialize,\n    [\"200\"],\n    { itemName: \"data\" },\n  );\n}\n\nexport function _createAgentSend(\n  context: Client,\n  model: string,\n  options: CreateAgentOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/assistants{?api-version}\",\n    {\n      \"api-version\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).post({\n    ...operationOptionsToRequestParameters(options),\n    contentType: \"application/json\",\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n    body: {\n      model: model,\n      name: options?.name,\n      description: options?.description,\n      instructions: options?.instructions,\n      tools: !options?.tools ? options?.tools : toolDefinitionUnionArraySerializer(options?.tools),\n      tool_resources: !options?.toolResources\n        ? options?.toolResources\n        : toolResourcesSerializer(options?.toolResources),\n      temperature: options?.temperature,\n      top_p: options?.topP,\n      response_format: !options?.responseFormat\n        ? options?.responseFormat\n        : agentsResponseFormatOptionSerializer(options?.responseFormat),\n      metadata: options?.metadata,\n    },\n  });\n}\n\nexport async function _createAgentDeserialize(result: PathUncheckedResponse): Promise<Agent> {\n  const expectedStatuses = [\"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = agentV1ErrorDeserializer(result.body);\n    throw error;\n  }\n\n  return agentDeserializer(result.body);\n}\n\n/** Creates a new agent. */\nexport async function createAgent(\n  context: Client,\n  model: string,\n  options: CreateAgentOptionalParams = { requestOptions: {} },\n): Promise<Agent> {\n  const result = await _createAgentSend(context, model, options);\n  return _createAgentDeserialize(result);\n}\n\nfunction createAgentStream(stream: EventMessageStream): AgentEventMessageStream {\n  const asyncIterator = toAsyncIterable(stream);\n  const asyncDisposable = stream as AsyncDisposable;\n  return Object.assign(asyncIterator, asyncDisposable);\n}\n\nasync function* toAsyncIterable(stream: EventMessageStream): AsyncIterable<AgentEventMessage> {\n  for await (const event of stream) {\n    const data = deserializeEventData(event);\n    yield { data: data, event: event.event };\n  }\n}\n\nfunction deserializeEventData(event: EventMessage): AgentEventStreamData {\n  try {\n    const jsonData = JSON.parse(event.data);\n    if (Object.values(RunStepStreamEvent).includes(event.event as RunStepStreamEvent)) {\n      if (event.event === RunStepStreamEvent.ThreadRunStepDelta) {\n        return runStepDeltaChunkDeserializer(jsonData);\n      }\n      return runStepDeserializer(jsonData);\n    }\n    if (Object.values(MessageStreamEvent).includes(event.event as MessageStreamEvent)) {\n      if (event.event === MessageStreamEvent.ThreadMessageDelta) {\n        return messageDeltaChunkDeserializer(jsonData);\n      }\n      return threadMessageDeserializer(jsonData);\n    }\n    if (Object.values(RunStreamEvent).includes(event.event as RunStreamEvent)) {\n      return threadRunDeserializer(jsonData);\n    }\n    return jsonData;\n  } catch (ex) {\n    logger.error(`Failed to parse event data  ${event.event} - error: ${ex}`);\n    return event.data;\n  }\n}\n\nasync function processStream(streamResponse: StreamableMethod): Promise<AgentEventMessageStream> {\n  const expectedStatuses = [\"200\"];\n  const result = isNodeLike\n    ? await streamResponse.asNodeStream()\n    : await streamResponse.asBrowserStream();\n\n  if (!expectedStatuses.includes(result.status)) {\n    throw createRestError(result);\n  }\n  if (!result.body) {\n    throw new Error(\"No body in response\");\n  }\n\n  const stream = isNodeLike\n    ? createSseStream(result.body as IncomingMessage)\n    : createSseStream(result.body as ReadableStream);\n  return createAgentStream(stream);\n}\n\n/** Create a run and stream the events */\nexport async function createRunStreaming(\n  context: Client,\n  assistantId: string,\n  threadId: string,\n  options: RunsCreateRunOptionalParams = { requestOptions: {} },\n): Promise<AgentEventMessageStream> {\n  const streamOptions = { ...options, stream: true };\n\n  return processStream(_createRunSend(context, threadId, assistantId, streamOptions));\n}\n\n/** Create a thread and run and stream the events */\nexport async function createThreadAndRunStreaming(\n  context: Client,\n  assistantId: string,\n  options: CreateThreadAndRunOptionalParams = { requestOptions: {} },\n): Promise<AgentEventMessageStream> {\n  const streamOptions = { ...options, stream: true };\n  return processStream(_createThreadAndRunSend(context, assistantId, streamOptions));\n}\n\nexport async function submitToolOutputsToRunStreaming(\n  context: Client,\n  threadId: string,\n  runId: string,\n  toolOutputs: ToolOutput[],\n  options: RunsSubmitToolOutputsToRunOptionalParams = { requestOptions: {} },\n): Promise<AgentEventMessageStream> {\n  const streamOptions = { ...options, stream: true };\n\n  return processStream(\n    _submitToolOutputsToRunSend(context, threadId, runId, toolOutputs, streamOptions),\n  );\n}\n"]}