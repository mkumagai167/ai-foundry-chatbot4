{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createDisableKeepAlivePolicy, pipelineContainsDisableKeepAlivePolicy } from \"./policies/disableKeepAlivePolicy.js\";\nimport { redirectPolicyName } from \"@azure/core-rest-pipeline\";\nimport { ServiceClient } from \"@azure/core-client\";\nimport { toCompatResponse } from \"./response.js\";\n/**\n * Client to provide compatability between core V1 & V2.\n */\nexport class ExtendedServiceClient extends ServiceClient {\n  constructor(options) {\n    super(options);\n    if (options.keepAliveOptions?.enable === false && !pipelineContainsDisableKeepAlivePolicy(this.pipeline)) {\n      this.pipeline.addPolicy(createDisableKeepAlivePolicy());\n    }\n    if (options.redirectOptions?.handleRedirects === false) {\n      this.pipeline.removePolicy({\n        name: redirectPolicyName\n      });\n    }\n  }\n  /**\n   * Compatible send operation request function.\n   *\n   * @param operationArguments - Operation arguments\n   * @param operationSpec - Operation Spec\n   * @returns\n   */\n  async sendOperationRequest(operationArguments, operationSpec) {\n    const userProvidedCallBack = operationArguments?.options?.onResponse;\n    let lastResponse;\n    function onResponse(rawResponse, flatResponse, error) {\n      lastResponse = rawResponse;\n      if (userProvidedCallBack) {\n        userProvidedCallBack(rawResponse, flatResponse, error);\n      }\n    }\n    operationArguments.options = {\n      ...operationArguments.options,\n      onResponse\n    };\n    const result = await super.sendOperationRequest(operationArguments, operationSpec);\n    if (lastResponse) {\n      Object.defineProperty(result, \"_response\", {\n        value: toCompatResponse(lastResponse)\n      });\n    }\n    return result;\n  }\n}","map":{"version":3,"names":["createDisableKeepAlivePolicy","pipelineContainsDisableKeepAlivePolicy","redirectPolicyName","ServiceClient","toCompatResponse","ExtendedServiceClient","constructor","options","keepAliveOptions","enable","pipeline","addPolicy","redirectOptions","handleRedirects","removePolicy","name","sendOperationRequest","operationArguments","operationSpec","userProvidedCallBack","onResponse","lastResponse","rawResponse","flatResponse","error","result","Object","defineProperty","value"],"sources":["C:\\Users\\M.Kumagai\\Documents\\React\\ai-foundry-chatbot4\\frontend\\node_modules\\@azure\\core-http-compat\\src\\extendedClient.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { KeepAliveOptions } from \"./policies/keepAliveOptions.js\";\nimport {\n  createDisableKeepAlivePolicy,\n  pipelineContainsDisableKeepAlivePolicy,\n} from \"./policies/disableKeepAlivePolicy.js\";\nimport type { RedirectOptions } from \"./policies/redirectOptions.js\";\nimport { redirectPolicyName } from \"@azure/core-rest-pipeline\";\nimport type {\n  CommonClientOptions,\n  FullOperationResponse,\n  OperationArguments,\n  OperationSpec,\n  RawResponseCallback,\n  ServiceClientOptions,\n} from \"@azure/core-client\";\nimport { ServiceClient } from \"@azure/core-client\";\nimport { toCompatResponse } from \"./response.js\";\n\n/**\n * Options specific to Shim Clients.\n */\nexport interface ExtendedClientOptions {\n  /**\n   * Options to disable keep alive.\n   */\n  keepAliveOptions?: KeepAliveOptions;\n  /**\n   * Options to redirect requests.\n   */\n  redirectOptions?: RedirectOptions;\n}\n\n/**\n * Options that shim clients are expected to expose.\n */\nexport type ExtendedServiceClientOptions = ServiceClientOptions & ExtendedClientOptions;\n\n/**\n * The common set of options that custom shim clients are expected to expose.\n */\nexport type ExtendedCommonClientOptions = CommonClientOptions & ExtendedClientOptions;\n\n/**\n * Client to provide compatability between core V1 & V2.\n */\nexport class ExtendedServiceClient extends ServiceClient {\n  constructor(options: ExtendedServiceClientOptions) {\n    super(options);\n\n    if (\n      options.keepAliveOptions?.enable === false &&\n      !pipelineContainsDisableKeepAlivePolicy(this.pipeline)\n    ) {\n      this.pipeline.addPolicy(createDisableKeepAlivePolicy());\n    }\n\n    if (options.redirectOptions?.handleRedirects === false) {\n      this.pipeline.removePolicy({\n        name: redirectPolicyName,\n      });\n    }\n  }\n\n  /**\n   * Compatible send operation request function.\n   *\n   * @param operationArguments - Operation arguments\n   * @param operationSpec - Operation Spec\n   * @returns\n   */\n  async sendOperationRequest<T>(\n    operationArguments: OperationArguments,\n    operationSpec: OperationSpec,\n  ): Promise<T> {\n    const userProvidedCallBack: RawResponseCallback | undefined =\n      operationArguments?.options?.onResponse;\n\n    let lastResponse: FullOperationResponse | undefined;\n\n    function onResponse(\n      rawResponse: FullOperationResponse,\n      flatResponse: unknown,\n      error?: unknown,\n    ): void {\n      lastResponse = rawResponse;\n      if (userProvidedCallBack) {\n        userProvidedCallBack(rawResponse, flatResponse, error);\n      }\n    }\n\n    operationArguments.options = {\n      ...operationArguments.options,\n      onResponse,\n    };\n\n    const result: T = await super.sendOperationRequest(operationArguments, operationSpec);\n\n    if (lastResponse) {\n      Object.defineProperty(result, \"_response\", {\n        value: toCompatResponse(lastResponse),\n      });\n    }\n\n    return result;\n  }\n}\n"],"mappings":"AAAA;AACA;AAGA,SACEA,4BAA4B,EAC5BC,sCAAsC,QACjC,sCAAsC;AAE7C,SAASC,kBAAkB,QAAQ,2BAA2B;AAS9D,SAASC,aAAa,QAAQ,oBAAoB;AAClD,SAASC,gBAAgB,QAAQ,eAAe;AA0BhD;;;AAGA,OAAM,MAAOC,qBAAsB,SAAQF,aAAa;EACtDG,YAAYC,OAAqC;IAC/C,KAAK,CAACA,OAAO,CAAC;IAEd,IACEA,OAAO,CAACC,gBAAgB,EAAEC,MAAM,KAAK,KAAK,IAC1C,CAACR,sCAAsC,CAAC,IAAI,CAACS,QAAQ,CAAC,EACtD;MACA,IAAI,CAACA,QAAQ,CAACC,SAAS,CAACX,4BAA4B,EAAE,CAAC;IACzD;IAEA,IAAIO,OAAO,CAACK,eAAe,EAAEC,eAAe,KAAK,KAAK,EAAE;MACtD,IAAI,CAACH,QAAQ,CAACI,YAAY,CAAC;QACzBC,IAAI,EAAEb;OACP,CAAC;IACJ;EACF;EAEA;;;;;;;EAOA,MAAMc,oBAAoBA,CACxBC,kBAAsC,EACtCC,aAA4B;IAE5B,MAAMC,oBAAoB,GACxBF,kBAAkB,EAAEV,OAAO,EAAEa,UAAU;IAEzC,IAAIC,YAA+C;IAEnD,SAASD,UAAUA,CACjBE,WAAkC,EAClCC,YAAqB,EACrBC,KAAe;MAEfH,YAAY,GAAGC,WAAW;MAC1B,IAAIH,oBAAoB,EAAE;QACxBA,oBAAoB,CAACG,WAAW,EAAEC,YAAY,EAAEC,KAAK,CAAC;MACxD;IACF;IAEAP,kBAAkB,CAACV,OAAO,GAAG;MAC3B,GAAGU,kBAAkB,CAACV,OAAO;MAC7Ba;KACD;IAED,MAAMK,MAAM,GAAM,MAAM,KAAK,CAACT,oBAAoB,CAACC,kBAAkB,EAAEC,aAAa,CAAC;IAErF,IAAIG,YAAY,EAAE;MAChBK,MAAM,CAACC,cAAc,CAACF,MAAM,EAAE,WAAW,EAAE;QACzCG,KAAK,EAAExB,gBAAgB,CAACiB,YAAY;OACrC,CAAC;IACJ;IAEA,OAAOI,MAAM;EACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}