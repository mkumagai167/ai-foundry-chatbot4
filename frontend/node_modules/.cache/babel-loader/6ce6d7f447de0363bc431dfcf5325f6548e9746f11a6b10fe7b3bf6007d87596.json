{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M.Kumagai\\\\Documents\\\\React\\\\ai-foundry-chatbot4\\\\frontend\\\\src\\\\components\\\\FileUpload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FileUpload({\n  threadId\n}) {\n  _s();\n  const [file, setFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  async function onUpload() {\n    if (!file) return;\n    setUploading(true);\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      if (threadId) {\n        formData.append(\"threadId\", threadId);\n      }\n      const resp = await fetch(\"/api/uploadToVectorStore\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (!resp.ok) {\n        const txt = await resp.text();\n        throw new Error(`Upload failed: status ${resp.status}, body: ${txt}`);\n      }\n      const json = await resp.json();\n      alert(\"File uploaded to vector store: \" + json.fileId);\n    } catch (err) {\n      console.error(\"Upload failed:\", err);\n      alert(\"Upload failed: \" + err.message);\n    } finally {\n      setUploading(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Upload a Document to Vector Store\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setFile(e.target.files[0]),\n      style: {\n        marginRight: 10\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onUpload,\n      disabled: !file || uploading,\n      children: uploading ? \"Uploading...\" : \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(FileUpload, \"XzDh85CJXY53/nU7yS/Rq6ZjQAg=\");\n_c = FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FileUpload","threadId","_s","file","setFile","uploading","setUploading","onUpload","formData","FormData","append","resp","fetch","method","body","ok","txt","text","Error","status","json","alert","fileId","err","console","error","message","style","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","files","marginRight","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/M.Kumagai/Documents/React/ai-foundry-chatbot4/frontend/src/components/FileUpload.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function FileUpload({ threadId }) {\r\n  const [file, setFile] = useState(null);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  async function onUpload() {\r\n    if (!file) return;\r\n    setUploading(true);\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n      if (threadId) {\r\n        formData.append(\"threadId\", threadId);\r\n      }\r\n\r\n      const resp = await fetch(\"/api/uploadToVectorStore\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      if (!resp.ok) {\r\n        const txt = await resp.text();\r\n        throw new Error(`Upload failed: status ${resp.status}, body: ${txt}`);\r\n      }\r\n\r\n      const json = await resp.json();\r\n      alert(\"File uploaded to vector store: \" + json.fileId);\r\n    } catch (err) {\r\n      console.error(\"Upload failed:\", err);\r\n      alert(\"Upload failed: \" + err.message);\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{ marginTop: 20 }}>\r\n      <h3>Upload a Document to Vector Store</h3>\r\n      <input\r\n        type=\"file\"\r\n        onChange={(e) => setFile(e.target.files[0])}\r\n        style={{ marginRight: 10 }}\r\n      />\r\n      <button onClick={onUpload} disabled={!file || uploading}>\r\n        {uploading ? \"Uploading...\" : \"Upload\"}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,UAAUA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC/C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEjD,eAAeU,QAAQA,CAAA,EAAG;IACxB,IAAI,CAACJ,IAAI,EAAE;IACXG,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAME,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEP,IAAI,CAAC;MAC7B,IAAIF,QAAQ,EAAE;QACZO,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAET,QAAQ,CAAC;MACvC;MAEA,MAAMU,IAAI,GAAG,MAAMC,KAAK,CAAC,0BAA0B,EAAE;QACnDC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;MAEF,IAAI,CAACG,IAAI,CAACI,EAAE,EAAE;QACZ,MAAMC,GAAG,GAAG,MAAML,IAAI,CAACM,IAAI,CAAC,CAAC;QAC7B,MAAM,IAAIC,KAAK,CAAC,yBAAyBP,IAAI,CAACQ,MAAM,WAAWH,GAAG,EAAE,CAAC;MACvE;MAEA,MAAMI,IAAI,GAAG,MAAMT,IAAI,CAACS,IAAI,CAAC,CAAC;MAC9BC,KAAK,CAAC,iCAAiC,GAAGD,IAAI,CAACE,MAAM,CAAC;IACxD,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,gBAAgB,EAAEF,GAAG,CAAC;MACpCF,KAAK,CAAC,iBAAiB,GAAGE,GAAG,CAACG,OAAO,CAAC;IACxC,CAAC,SAAS;MACRpB,YAAY,CAAC,KAAK,CAAC;IACrB;EACF;EAEA,oBACEP,OAAA;IAAK4B,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAG,CAAE;IAAAC,QAAA,gBAC5B9B,OAAA;MAAA8B,QAAA,EAAI;IAAiC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1ClC,OAAA;MACEmC,IAAI,EAAC,MAAM;MACXC,QAAQ,EAAGC,CAAC,IAAKhC,OAAO,CAACgC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAE;MAC5CX,KAAK,EAAE;QAAEY,WAAW,EAAE;MAAG;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACFlC,OAAA;MAAQyC,OAAO,EAAEjC,QAAS;MAACkC,QAAQ,EAAE,CAACtC,IAAI,IAAIE,SAAU;MAAAwB,QAAA,EACrDxB,SAAS,GAAG,cAAc,GAAG;IAAQ;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAC/B,EAAA,CA/CuBF,UAAU;AAAA0C,EAAA,GAAV1C,UAAU;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}