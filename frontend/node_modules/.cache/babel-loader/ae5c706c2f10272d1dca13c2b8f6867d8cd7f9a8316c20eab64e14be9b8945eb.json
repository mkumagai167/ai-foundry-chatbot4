{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { deserializationPolicy } from \"./deserializationPolicy.js\";\nimport { bearerTokenAuthenticationPolicy, createPipelineFromOptions } from \"@azure/core-rest-pipeline\";\nimport { serializationPolicy } from \"./serializationPolicy.js\";\n/**\n * Creates a new Pipeline for use with a Service Client.\n * Adds in deserializationPolicy by default.\n * Also adds in bearerTokenAuthenticationPolicy if passed a TokenCredential.\n * @param options - Options to customize the created pipeline.\n */\nexport function createClientPipeline(options = {}) {\n  const pipeline = createPipelineFromOptions(options ?? {});\n  if (options.credentialOptions) {\n    pipeline.addPolicy(bearerTokenAuthenticationPolicy({\n      credential: options.credentialOptions.credential,\n      scopes: options.credentialOptions.credentialScopes\n    }));\n  }\n  pipeline.addPolicy(serializationPolicy(options.serializationOptions), {\n    phase: \"Serialize\"\n  });\n  pipeline.addPolicy(deserializationPolicy(options.deserializationOptions), {\n    phase: \"Deserialize\"\n  });\n  return pipeline;\n}","map":{"version":3,"names":["deserializationPolicy","bearerTokenAuthenticationPolicy","createPipelineFromOptions","serializationPolicy","createClientPipeline","options","pipeline","credentialOptions","addPolicy","credential","scopes","credentialScopes","serializationOptions","phase","deserializationOptions"],"sources":["C:\\Users\\M.Kumagai\\Documents\\React\\ai-foundry-chatbot4\\frontend\\node_modules\\@azure\\core-client\\src\\pipeline.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { DeserializationPolicyOptions } from \"./deserializationPolicy.js\";\nimport { deserializationPolicy } from \"./deserializationPolicy.js\";\nimport type { InternalPipelineOptions, Pipeline } from \"@azure/core-rest-pipeline\";\nimport {\n  bearerTokenAuthenticationPolicy,\n  createPipelineFromOptions,\n} from \"@azure/core-rest-pipeline\";\nimport type { SerializationPolicyOptions } from \"./serializationPolicy.js\";\nimport { serializationPolicy } from \"./serializationPolicy.js\";\nimport type { TokenCredential } from \"@azure/core-auth\";\n\n/**\n * Options for creating a Pipeline to use with ServiceClient.\n * Mostly for customizing the auth policy (if using token auth) or\n * the deserialization options when using XML.\n */\nexport interface InternalClientPipelineOptions extends InternalPipelineOptions {\n  /**\n   * Options to customize bearerTokenAuthenticationPolicy.\n   */\n  credentialOptions?: { credentialScopes: string | string[]; credential: TokenCredential };\n  /**\n   * Options to customize deserializationPolicy.\n   */\n  deserializationOptions?: DeserializationPolicyOptions;\n  /**\n   * Options to customize serializationPolicy.\n   */\n  serializationOptions?: SerializationPolicyOptions;\n}\n\n/**\n * Creates a new Pipeline for use with a Service Client.\n * Adds in deserializationPolicy by default.\n * Also adds in bearerTokenAuthenticationPolicy if passed a TokenCredential.\n * @param options - Options to customize the created pipeline.\n */\nexport function createClientPipeline(options: InternalClientPipelineOptions = {}): Pipeline {\n  const pipeline = createPipelineFromOptions(options ?? {});\n  if (options.credentialOptions) {\n    pipeline.addPolicy(\n      bearerTokenAuthenticationPolicy({\n        credential: options.credentialOptions.credential,\n        scopes: options.credentialOptions.credentialScopes,\n      }),\n    );\n  }\n\n  pipeline.addPolicy(serializationPolicy(options.serializationOptions), { phase: \"Serialize\" });\n  pipeline.addPolicy(deserializationPolicy(options.deserializationOptions), {\n    phase: \"Deserialize\",\n  });\n\n  return pipeline;\n}\n"],"mappings":"AAAA;AACA;AAGA,SAASA,qBAAqB,QAAQ,4BAA4B;AAElE,SACEC,+BAA+B,EAC/BC,yBAAyB,QACpB,2BAA2B;AAElC,SAASC,mBAAmB,QAAQ,0BAA0B;AAuB9D;;;;;;AAMA,OAAM,SAAUC,oBAAoBA,CAACC,OAAA,GAAyC,EAAE;EAC9E,MAAMC,QAAQ,GAAGJ,yBAAyB,CAACG,OAAO,IAAI,EAAE,CAAC;EACzD,IAAIA,OAAO,CAACE,iBAAiB,EAAE;IAC7BD,QAAQ,CAACE,SAAS,CAChBP,+BAA+B,CAAC;MAC9BQ,UAAU,EAAEJ,OAAO,CAACE,iBAAiB,CAACE,UAAU;MAChDC,MAAM,EAAEL,OAAO,CAACE,iBAAiB,CAACI;KACnC,CAAC,CACH;EACH;EAEAL,QAAQ,CAACE,SAAS,CAACL,mBAAmB,CAACE,OAAO,CAACO,oBAAoB,CAAC,EAAE;IAAEC,KAAK,EAAE;EAAW,CAAE,CAAC;EAC7FP,QAAQ,CAACE,SAAS,CAACR,qBAAqB,CAACK,OAAO,CAACS,sBAAsB,CAAC,EAAE;IACxED,KAAK,EAAE;GACR,CAAC;EAEF,OAAOP,QAAQ;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}