{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { isError } from \"@typespec/ts-http-runtime/internal/util\";\n/**\n * Given what is thought to be an error object, return the message if possible.\n * If the message is missing, returns a stringified version of the input.\n * @param e - Something thrown from a try block\n * @returns The error message or a string of the input\n */\nexport function getErrorMessage(e) {\n  if (isError(e)) {\n    return e.message;\n  } else {\n    let stringified;\n    try {\n      if (typeof e === \"object\" && e) {\n        stringified = JSON.stringify(e);\n      } else {\n        stringified = String(e);\n      }\n    } catch (err) {\n      stringified = \"[unable to stringify input]\";\n    }\n    return `Unknown error ${stringified}`;\n  }\n}","map":{"version":3,"names":["isError","getErrorMessage","e","message","stringified","JSON","stringify","String","err"],"sources":["C:\\Users\\M.Kumagai\\Documents\\React\\ai-foundry-chatbot4\\frontend\\node_modules\\@azure\\core-util\\src\\error.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { isError } from \"@typespec/ts-http-runtime/internal/util\";\n\n/**\n * Given what is thought to be an error object, return the message if possible.\n * If the message is missing, returns a stringified version of the input.\n * @param e - Something thrown from a try block\n * @returns The error message or a string of the input\n */\nexport function getErrorMessage(e: unknown): string {\n  if (isError(e)) {\n    return e.message;\n  } else {\n    let stringified: string;\n    try {\n      if (typeof e === \"object\" && e) {\n        stringified = JSON.stringify(e);\n      } else {\n        stringified = String(e);\n      }\n    } catch (err: any) {\n      stringified = \"[unable to stringify input]\";\n    }\n    return `Unknown error ${stringified}`;\n  }\n}\n"],"mappings":"AAAA;AACA;AAEA,SAASA,OAAO,QAAQ,yCAAyC;AAEjE;;;;;;AAMA,OAAM,SAAUC,eAAeA,CAACC,CAAU;EACxC,IAAIF,OAAO,CAACE,CAAC,CAAC,EAAE;IACd,OAAOA,CAAC,CAACC,OAAO;EAClB,CAAC,MAAM;IACL,IAAIC,WAAmB;IACvB,IAAI;MACF,IAAI,OAAOF,CAAC,KAAK,QAAQ,IAAIA,CAAC,EAAE;QAC9BE,WAAW,GAAGC,IAAI,CAACC,SAAS,CAACJ,CAAC,CAAC;MACjC,CAAC,MAAM;QACLE,WAAW,GAAGG,MAAM,CAACL,CAAC,CAAC;MACzB;IACF,CAAC,CAAC,OAAOM,GAAQ,EAAE;MACjBJ,WAAW,GAAG,6BAA6B;IAC7C;IACA,OAAO,iBAAiBA,WAAW,EAAE;EACvC;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}