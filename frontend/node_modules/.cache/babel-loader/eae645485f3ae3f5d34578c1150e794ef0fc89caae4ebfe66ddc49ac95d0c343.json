{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { StorageClient } from \"./generated/src/index.js\";\n/**\n * @internal\n */\nexport class StorageContextClient extends StorageClient {\n  async sendOperationRequest(operationArguments, operationSpec) {\n    const operationSpecToSend = {\n      ...operationSpec\n    };\n    if (operationSpecToSend.path === \"/{containerName}\" || operationSpecToSend.path === \"/{containerName}/{blob}\") {\n      operationSpecToSend.path = \"\";\n    }\n    return super.sendOperationRequest(operationArguments, operationSpecToSend);\n  }\n}","map":{"version":3,"names":["StorageClient","StorageContextClient","sendOperationRequest","operationArguments","operationSpec","operationSpecToSend","path"],"sources":["C:\\Users\\M.Kumagai\\Documents\\React\\ai-foundry-chatbot4\\frontend\\node_modules\\@azure\\storage-blob\\src\\StorageContextClient.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { OperationArguments, OperationSpec } from \"@azure/core-client\";\nimport { StorageClient } from \"./generated/src/index.js\";\n\n/**\n * @internal\n */\nexport class StorageContextClient extends StorageClient {\n  async sendOperationRequest<T>(\n    operationArguments: OperationArguments,\n    operationSpec: OperationSpec,\n  ): Promise<T> {\n    const operationSpecToSend = { ...operationSpec };\n\n    if (\n      operationSpecToSend.path === \"/{containerName}\" ||\n      operationSpecToSend.path === \"/{containerName}/{blob}\"\n    ) {\n      operationSpecToSend.path = \"\";\n    }\n    return super.sendOperationRequest(operationArguments, operationSpecToSend);\n  }\n}\n"],"mappings":"AAAA;AACA;AAGA,SAASA,aAAa,QAAQ,0BAA0B;AAExD;;;AAGA,OAAM,MAAOC,oBAAqB,SAAQD,aAAa;EACrD,MAAME,oBAAoBA,CACxBC,kBAAsC,EACtCC,aAA4B;IAE5B,MAAMC,mBAAmB,GAAG;MAAE,GAAGD;IAAa,CAAE;IAEhD,IACEC,mBAAmB,CAACC,IAAI,KAAK,kBAAkB,IAC/CD,mBAAmB,CAACC,IAAI,KAAK,yBAAyB,EACtD;MACAD,mBAAmB,CAACC,IAAI,GAAG,EAAE;IAC/B;IACA,OAAO,KAAK,CAACJ,oBAAoB,CAACC,kBAAkB,EAAEE,mBAAmB,CAAC;EAC5E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}