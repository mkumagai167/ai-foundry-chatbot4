{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createDefaultHttpClient as tspCreateDefaultHttpClient } from \"@typespec/ts-http-runtime\";\nimport { wrapAbortSignalLike } from \"./util/wrapAbortSignal.js\";\n/**\n * Create the correct HttpClient for the current environment.\n */\nexport function createDefaultHttpClient() {\n  const client = tspCreateDefaultHttpClient();\n  return {\n    async sendRequest(request) {\n      // we wrap any AbortSignalLike here since the TypeSpec runtime expects a native AbortSignal.\n      // 99% of the time, this should be a no-op since a native AbortSignal is passed in.\n      const {\n        abortSignal,\n        cleanup\n      } = request.abortSignal ? wrapAbortSignalLike(request.abortSignal) : {};\n      try {\n        // eslint-disable-next-line no-param-reassign\n        request.abortSignal = abortSignal;\n        return await client.sendRequest(request);\n      } finally {\n        cleanup?.();\n      }\n    }\n  };\n}","map":{"version":3,"names":["createDefaultHttpClient","tspCreateDefaultHttpClient","wrapAbortSignalLike","client","sendRequest","request","abortSignal","cleanup"],"sources":["C:\\Users\\M.Kumagai\\Documents\\React\\ai-foundry-chatbot4\\frontend\\node_modules\\@azure\\core-rest-pipeline\\src\\defaultHttpClient.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { HttpClient } from \"./interfaces.js\";\nimport { createDefaultHttpClient as tspCreateDefaultHttpClient } from \"@typespec/ts-http-runtime\";\nimport { wrapAbortSignalLike } from \"./util/wrapAbortSignal.js\";\nimport { type PipelineRequest as TspPipelineRequest } from \"@typespec/ts-http-runtime\";\n\n/**\n * Create the correct HttpClient for the current environment.\n */\nexport function createDefaultHttpClient(): HttpClient {\n  const client = tspCreateDefaultHttpClient();\n  return {\n    async sendRequest(request) {\n      // we wrap any AbortSignalLike here since the TypeSpec runtime expects a native AbortSignal.\n      // 99% of the time, this should be a no-op since a native AbortSignal is passed in.\n      const { abortSignal, cleanup } = request.abortSignal\n        ? wrapAbortSignalLike(request.abortSignal)\n        : {};\n      try {\n        // eslint-disable-next-line no-param-reassign\n        request.abortSignal = abortSignal;\n        return await client.sendRequest(request as TspPipelineRequest);\n      } finally {\n        cleanup?.();\n      }\n    },\n  };\n}\n"],"mappings":"AAAA;AACA;AAGA,SAASA,uBAAuB,IAAIC,0BAA0B,QAAQ,2BAA2B;AACjG,SAASC,mBAAmB,QAAQ,2BAA2B;AAG/D;;;AAGA,OAAM,SAAUF,uBAAuBA,CAAA;EACrC,MAAMG,MAAM,GAAGF,0BAA0B,EAAE;EAC3C,OAAO;IACL,MAAMG,WAAWA,CAACC,OAAO;MACvB;MACA;MACA,MAAM;QAAEC,WAAW;QAAEC;MAAO,CAAE,GAAGF,OAAO,CAACC,WAAW,GAChDJ,mBAAmB,CAACG,OAAO,CAACC,WAAW,CAAC,GACxC,EAAE;MACN,IAAI;QACF;QACAD,OAAO,CAACC,WAAW,GAAGA,WAAW;QACjC,OAAO,MAAMH,MAAM,CAACC,WAAW,CAACC,OAA6B,CAAC;MAChE,CAAC,SAAS;QACRE,OAAO,GAAE,CAAE;MACb;IACF;GACD;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}