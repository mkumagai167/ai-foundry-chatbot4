{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createHttpHeaders } from \"./httpHeaders.js\";\nimport { randomUUID } from \"./util/uuidUtils.js\";\nclass PipelineRequestImpl {\n  url;\n  method;\n  headers;\n  timeout;\n  withCredentials;\n  body;\n  multipartBody;\n  formData;\n  streamResponseStatusCodes;\n  enableBrowserStreams;\n  proxySettings;\n  disableKeepAlive;\n  abortSignal;\n  requestId;\n  allowInsecureConnection;\n  onUploadProgress;\n  onDownloadProgress;\n  requestOverrides;\n  authSchemes;\n  constructor(options) {\n    this.url = options.url;\n    this.body = options.body;\n    this.headers = options.headers ?? createHttpHeaders();\n    this.method = options.method ?? \"GET\";\n    this.timeout = options.timeout ?? 0;\n    this.multipartBody = options.multipartBody;\n    this.formData = options.formData;\n    this.disableKeepAlive = options.disableKeepAlive ?? false;\n    this.proxySettings = options.proxySettings;\n    this.streamResponseStatusCodes = options.streamResponseStatusCodes;\n    this.withCredentials = options.withCredentials ?? false;\n    this.abortSignal = options.abortSignal;\n    this.onUploadProgress = options.onUploadProgress;\n    this.onDownloadProgress = options.onDownloadProgress;\n    this.requestId = options.requestId || randomUUID();\n    this.allowInsecureConnection = options.allowInsecureConnection ?? false;\n    this.enableBrowserStreams = options.enableBrowserStreams ?? false;\n    this.requestOverrides = options.requestOverrides;\n    this.authSchemes = options.authSchemes;\n  }\n}\n/**\n * Creates a new pipeline request with the given options.\n * This method is to allow for the easy setting of default values and not required.\n * @param options - The options to create the request with.\n */\nexport function createPipelineRequest(options) {\n  return new PipelineRequestImpl(options);\n}","map":{"version":3,"names":["createHttpHeaders","randomUUID","PipelineRequestImpl","url","method","headers","timeout","withCredentials","body","multipartBody","formData","streamResponseStatusCodes","enableBrowserStreams","proxySettings","disableKeepAlive","abortSignal","requestId","allowInsecureConnection","onUploadProgress","onDownloadProgress","requestOverrides","authSchemes","constructor","options","createPipelineRequest"],"sources":["C:\\Users\\M.Kumagai\\Documents\\React\\ai-foundry-chatbot4\\frontend\\node_modules\\@typespec\\ts-http-runtime\\src\\pipelineRequest.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  FormDataMap,\n  HttpHeaders,\n  HttpMethods,\n  MultipartRequestBody,\n  PipelineRequest,\n  ProxySettings,\n  RequestBodyType,\n  TransferProgressEvent,\n} from \"./interfaces.js\";\nimport { createHttpHeaders } from \"./httpHeaders.js\";\nimport { randomUUID } from \"./util/uuidUtils.js\";\nimport { AuthScheme } from \"./auth/schemes.js\";\n\n/**\n * Settings to initialize a request.\n * Almost equivalent to Partial<PipelineRequest>, but url is mandatory.\n */\nexport interface PipelineRequestOptions {\n  /**\n   * The URL to make the request to.\n   */\n  url: string;\n\n  /**\n   * The HTTP method to use when making the request.\n   */\n  method?: HttpMethods;\n\n  /**\n   * The HTTP headers to use when making the request.\n   */\n  headers?: HttpHeaders;\n\n  /**\n   * The number of milliseconds a request can take before automatically being terminated.\n   * If the request is terminated, an `AbortError` is thrown.\n   * Defaults to 0, which disables the timeout.\n   */\n  timeout?: number;\n\n  /**\n   * If credentials (cookies) should be sent along during an XHR.\n   * Defaults to false.\n   */\n  withCredentials?: boolean;\n\n  /**\n   * A unique identifier for the request. Used for logging and tracing.\n   */\n  requestId?: string;\n\n  /**\n   * The HTTP body content (if any)\n   */\n  body?: RequestBodyType;\n\n  /**\n   * Body for a multipart request.\n   */\n  multipartBody?: MultipartRequestBody;\n\n  /**\n   * To simulate a browser form post\n   */\n  formData?: FormDataMap;\n\n  /**\n   * A list of response status codes whose corresponding PipelineResponse body should be treated as a stream.\n   */\n  streamResponseStatusCodes?: Set<number>;\n\n  /**\n   * BROWSER ONLY\n   *\n   * A browser only option to enable use of the Streams API. If this option is set and streaming is used\n   * (see `streamResponseStatusCodes`), the response will have a property `browserStream` instead of\n   * `blobBody` which will be undefined.\n   *\n   * Default value is false\n   */\n  enableBrowserStreams?: boolean;\n\n  /**\n   * Proxy configuration.\n   */\n  proxySettings?: ProxySettings;\n\n  /**\n   * If the connection should not be reused.\n   */\n  disableKeepAlive?: boolean;\n\n  /**\n   * Used to abort the request later.\n   */\n  abortSignal?: AbortSignal;\n\n  /**\n   * Callback which fires upon upload progress.\n   */\n  onUploadProgress?: (progress: TransferProgressEvent) => void;\n\n  /** Callback which fires upon download progress. */\n  onDownloadProgress?: (progress: TransferProgressEvent) => void;\n\n  /** Set to true if the request is sent over HTTP instead of HTTPS */\n  allowInsecureConnection?: boolean;\n\n  /**\n   * List of authentication schemes used for this specific request.\n   * These schemes define how the request will be authenticated.\n   *\n   * If values are provided, these schemes override the client level authentication schemes.\n   * If an empty array is provided, it explicitly specifies no authentication for the request.\n   * If not provided at the request level, the client level authentication schemes will be used.\n   */\n  authSchemes?: AuthScheme[];\n\n  /**\n   * Additional options to set on the request. This provides a way to override\n   * existing ones or provide request properties that are not declared.\n   *\n   * For possible valid properties, see\n   *   - NodeJS https.request options:  https://nodejs.org/api/http.html#httprequestoptions-callback\n   *   - Browser RequestInit: https://developer.mozilla.org/en-US/docs/Web/API/RequestInit\n   *\n   * WARNING: Options specified here will override any properties of same names when request is sent by {@link HttpClient}.\n   */\n  requestOverrides?: Record<string, unknown>;\n}\n\nclass PipelineRequestImpl implements PipelineRequest {\n  public url: string;\n  public method: HttpMethods;\n  public headers: HttpHeaders;\n  public timeout: number;\n  public withCredentials: boolean;\n  public body?: RequestBodyType;\n  public multipartBody?: MultipartRequestBody;\n  public formData?: FormDataMap;\n  public streamResponseStatusCodes?: Set<number>;\n  public enableBrowserStreams: boolean;\n\n  public proxySettings?: ProxySettings;\n  public disableKeepAlive: boolean;\n  public abortSignal?: AbortSignal;\n  public requestId: string;\n  public allowInsecureConnection?: boolean;\n  public onUploadProgress?: (progress: TransferProgressEvent) => void;\n  public onDownloadProgress?: (progress: TransferProgressEvent) => void;\n  public requestOverrides?: Record<string, unknown>;\n  public authSchemes?: AuthScheme[];\n\n  constructor(options: PipelineRequestOptions) {\n    this.url = options.url;\n    this.body = options.body;\n    this.headers = options.headers ?? createHttpHeaders();\n    this.method = options.method ?? \"GET\";\n    this.timeout = options.timeout ?? 0;\n    this.multipartBody = options.multipartBody;\n    this.formData = options.formData;\n    this.disableKeepAlive = options.disableKeepAlive ?? false;\n    this.proxySettings = options.proxySettings;\n    this.streamResponseStatusCodes = options.streamResponseStatusCodes;\n    this.withCredentials = options.withCredentials ?? false;\n    this.abortSignal = options.abortSignal;\n    this.onUploadProgress = options.onUploadProgress;\n    this.onDownloadProgress = options.onDownloadProgress;\n    this.requestId = options.requestId || randomUUID();\n    this.allowInsecureConnection = options.allowInsecureConnection ?? false;\n    this.enableBrowserStreams = options.enableBrowserStreams ?? false;\n    this.requestOverrides = options.requestOverrides;\n    this.authSchemes = options.authSchemes;\n  }\n}\n\n/**\n * Creates a new pipeline request with the given options.\n * This method is to allow for the easy setting of default values and not required.\n * @param options - The options to create the request with.\n */\nexport function createPipelineRequest(options: PipelineRequestOptions): PipelineRequest {\n  return new PipelineRequestImpl(options);\n}\n"],"mappings":"AAAA;AACA;AAYA,SAASA,iBAAiB,QAAQ,kBAAkB;AACpD,SAASC,UAAU,QAAQ,qBAAqB;AAyHhD,MAAMC,mBAAmB;EAChBC,GAAG;EACHC,MAAM;EACNC,OAAO;EACPC,OAAO;EACPC,eAAe;EACfC,IAAI;EACJC,aAAa;EACbC,QAAQ;EACRC,yBAAyB;EACzBC,oBAAoB;EAEpBC,aAAa;EACbC,gBAAgB;EAChBC,WAAW;EACXC,SAAS;EACTC,uBAAuB;EACvBC,gBAAgB;EAChBC,kBAAkB;EAClBC,gBAAgB;EAChBC,WAAW;EAElBC,YAAYC,OAA+B;IACzC,IAAI,CAACpB,GAAG,GAAGoB,OAAO,CAACpB,GAAG;IACtB,IAAI,CAACK,IAAI,GAAGe,OAAO,CAACf,IAAI;IACxB,IAAI,CAACH,OAAO,GAAGkB,OAAO,CAAClB,OAAO,IAAIL,iBAAiB,EAAE;IACrD,IAAI,CAACI,MAAM,GAAGmB,OAAO,CAACnB,MAAM,IAAI,KAAK;IACrC,IAAI,CAACE,OAAO,GAAGiB,OAAO,CAACjB,OAAO,IAAI,CAAC;IACnC,IAAI,CAACG,aAAa,GAAGc,OAAO,CAACd,aAAa;IAC1C,IAAI,CAACC,QAAQ,GAAGa,OAAO,CAACb,QAAQ;IAChC,IAAI,CAACI,gBAAgB,GAAGS,OAAO,CAACT,gBAAgB,IAAI,KAAK;IACzD,IAAI,CAACD,aAAa,GAAGU,OAAO,CAACV,aAAa;IAC1C,IAAI,CAACF,yBAAyB,GAAGY,OAAO,CAACZ,yBAAyB;IAClE,IAAI,CAACJ,eAAe,GAAGgB,OAAO,CAAChB,eAAe,IAAI,KAAK;IACvD,IAAI,CAACQ,WAAW,GAAGQ,OAAO,CAACR,WAAW;IACtC,IAAI,CAACG,gBAAgB,GAAGK,OAAO,CAACL,gBAAgB;IAChD,IAAI,CAACC,kBAAkB,GAAGI,OAAO,CAACJ,kBAAkB;IACpD,IAAI,CAACH,SAAS,GAAGO,OAAO,CAACP,SAAS,IAAIf,UAAU,EAAE;IAClD,IAAI,CAACgB,uBAAuB,GAAGM,OAAO,CAACN,uBAAuB,IAAI,KAAK;IACvE,IAAI,CAACL,oBAAoB,GAAGW,OAAO,CAACX,oBAAoB,IAAI,KAAK;IACjE,IAAI,CAACQ,gBAAgB,GAAGG,OAAO,CAACH,gBAAgB;IAChD,IAAI,CAACC,WAAW,GAAGE,OAAO,CAACF,WAAW;EACxC;;AAGF;;;;;AAKA,OAAM,SAAUG,qBAAqBA,CAACD,OAA+B;EACnE,OAAO,IAAIrB,mBAAmB,CAACqB,OAAO,CAAC;AACzC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}