{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nexport function log(...args) {\n  if (args.length > 0) {\n    const firstArg = String(args[0]);\n    if (firstArg.includes(\":error\")) {\n      console.error(...args);\n    } else if (firstArg.includes(\":warning\")) {\n      console.warn(...args);\n    } else if (firstArg.includes(\":info\")) {\n      console.info(...args);\n    } else if (firstArg.includes(\":verbose\")) {\n      console.debug(...args);\n    } else {\n      console.debug(...args);\n    }\n  }\n}","map":{"version":3,"names":["log","args","length","firstArg","String","includes","console","error","warn","info","debug"],"sources":["C:\\Users\\M.Kumagai\\Documents\\React\\ai-foundry-chatbot4\\frontend\\node_modules\\@typespec\\ts-http-runtime\\src\\logger\\log.common.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nexport function log(...args: any[]): void {\n  if (args.length > 0) {\n    const firstArg = String(args[0]);\n    if (firstArg.includes(\":error\")) {\n      console.error(...args);\n    } else if (firstArg.includes(\":warning\")) {\n      console.warn(...args);\n    } else if (firstArg.includes(\":info\")) {\n      console.info(...args);\n    } else if (firstArg.includes(\":verbose\")) {\n      console.debug(...args);\n    } else {\n      console.debug(...args);\n    }\n  }\n}\n"],"mappings":"AAAA;AACA;AAEA,OAAM,SAAUA,GAAGA,CAAC,GAAGC,IAAW;EAChC,IAAIA,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;IACnB,MAAMC,QAAQ,GAAGC,MAAM,CAACH,IAAI,CAAC,CAAC,CAAC,CAAC;IAChC,IAAIE,QAAQ,CAACE,QAAQ,CAAC,QAAQ,CAAC,EAAE;MAC/BC,OAAO,CAACC,KAAK,CAAC,GAAGN,IAAI,CAAC;IACxB,CAAC,MAAM,IAAIE,QAAQ,CAACE,QAAQ,CAAC,UAAU,CAAC,EAAE;MACxCC,OAAO,CAACE,IAAI,CAAC,GAAGP,IAAI,CAAC;IACvB,CAAC,MAAM,IAAIE,QAAQ,CAACE,QAAQ,CAAC,OAAO,CAAC,EAAE;MACrCC,OAAO,CAACG,IAAI,CAAC,GAAGR,IAAI,CAAC;IACvB,CAAC,MAAM,IAAIE,QAAQ,CAACE,QAAQ,CAAC,UAAU,CAAC,EAAE;MACxCC,OAAO,CAACI,KAAK,CAAC,GAAGT,IAAI,CAAC;IACxB,CAAC,MAAM;MACLK,OAAO,CAACI,KAAK,CAAC,GAAGT,IAAI,CAAC;IACxB;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}