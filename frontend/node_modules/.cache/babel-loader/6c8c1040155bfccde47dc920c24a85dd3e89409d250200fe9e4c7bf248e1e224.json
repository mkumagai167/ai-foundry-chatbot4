{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { isNodeLike } from \"@azure/core-util\";\nimport { HeaderConstants, URLConstants } from \"../utils/constants.js\";\nimport { setURLParameter } from \"../utils/utils.common.js\";\n/**\n * The programmatic identifier of the StorageBrowserPolicy.\n */\nexport const storageBrowserPolicyName = \"storageBrowserPolicy\";\n/**\n * storageBrowserPolicy is a policy used to prevent browsers from caching requests\n * and to remove cookies and explicit content-length headers.\n */\nexport function storageBrowserPolicy() {\n  return {\n    name: storageBrowserPolicyName,\n    async sendRequest(request, next) {\n      if (isNodeLike) {\n        return next(request);\n      }\n      if (request.method === \"GET\" || request.method === \"HEAD\") {\n        request.url = setURLParameter(request.url, URLConstants.Parameters.FORCE_BROWSER_NO_CACHE, new Date().getTime().toString());\n      }\n      request.headers.delete(HeaderConstants.COOKIE);\n      // According to XHR standards, content-length should be fully controlled by browsers\n      request.headers.delete(HeaderConstants.CONTENT_LENGTH);\n      return next(request);\n    }\n  };\n}","map":{"version":3,"names":["isNodeLike","HeaderConstants","URLConstants","setURLParameter","storageBrowserPolicyName","storageBrowserPolicy","name","sendRequest","request","next","method","url","Parameters","FORCE_BROWSER_NO_CACHE","Date","getTime","toString","headers","delete","COOKIE","CONTENT_LENGTH"],"sources":["C:\\Users\\M.Kumagai\\Documents\\React\\ai-foundry-chatbot4\\frontend\\node_modules\\@azure\\storage-blob\\src\\policies\\StorageBrowserPolicyV2.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest,\n  PipelinePolicy,\n} from \"@azure/core-rest-pipeline\";\nimport { isNodeLike } from \"@azure/core-util\";\nimport { HeaderConstants, URLConstants } from \"../utils/constants.js\";\nimport { setURLParameter } from \"../utils/utils.common.js\";\n\n/**\n * The programmatic identifier of the StorageBrowserPolicy.\n */\nexport const storageBrowserPolicyName = \"storageBrowserPolicy\";\n\n/**\n * storageBrowserPolicy is a policy used to prevent browsers from caching requests\n * and to remove cookies and explicit content-length headers.\n */\nexport function storageBrowserPolicy(): PipelinePolicy {\n  return {\n    name: storageBrowserPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      if (isNodeLike) {\n        return next(request);\n      }\n\n      if (request.method === \"GET\" || request.method === \"HEAD\") {\n        request.url = setURLParameter(\n          request.url,\n          URLConstants.Parameters.FORCE_BROWSER_NO_CACHE,\n          new Date().getTime().toString(),\n        );\n      }\n\n      request.headers.delete(HeaderConstants.COOKIE);\n\n      // According to XHR standards, content-length should be fully controlled by browsers\n      request.headers.delete(HeaderConstants.CONTENT_LENGTH);\n      return next(request);\n    },\n  };\n}\n"],"mappings":"AAAA;AACA;AAQA,SAASA,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,eAAe,EAAEC,YAAY,QAAQ,uBAAuB;AACrE,SAASC,eAAe,QAAQ,0BAA0B;AAE1D;;;AAGA,OAAO,MAAMC,wBAAwB,GAAG,sBAAsB;AAE9D;;;;AAIA,OAAM,SAAUC,oBAAoBA,CAAA;EAClC,OAAO;IACLC,IAAI,EAAEF,wBAAwB;IAC9B,MAAMG,WAAWA,CAACC,OAAwB,EAAEC,IAAiB;MAC3D,IAAIT,UAAU,EAAE;QACd,OAAOS,IAAI,CAACD,OAAO,CAAC;MACtB;MAEA,IAAIA,OAAO,CAACE,MAAM,KAAK,KAAK,IAAIF,OAAO,CAACE,MAAM,KAAK,MAAM,EAAE;QACzDF,OAAO,CAACG,GAAG,GAAGR,eAAe,CAC3BK,OAAO,CAACG,GAAG,EACXT,YAAY,CAACU,UAAU,CAACC,sBAAsB,EAC9C,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE,CAACC,QAAQ,EAAE,CAChC;MACH;MAEAR,OAAO,CAACS,OAAO,CAACC,MAAM,CAACjB,eAAe,CAACkB,MAAM,CAAC;MAE9C;MACAX,OAAO,CAACS,OAAO,CAACC,MAAM,CAACjB,eAAe,CAACmB,cAAc,CAAC;MACtD,OAAOX,IAAI,CAACD,OAAO,CAAC;IACtB;GACD;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}