{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { logger as coreLogger } from \"../log.js\";\nimport { logPolicyName as tspLogPolicyName, logPolicy as tspLogPolicy } from \"@typespec/ts-http-runtime/internal/policies\";\n/**\n * The programmatic identifier of the logPolicy.\n */\nexport const logPolicyName = tspLogPolicyName;\n/**\n * A policy that logs all requests and responses.\n * @param options - Options to configure logPolicy.\n */\nexport function logPolicy(options = {}) {\n  return tspLogPolicy({\n    logger: coreLogger.info,\n    ...options\n  });\n}","map":{"version":3,"names":["logger","coreLogger","logPolicyName","tspLogPolicyName","logPolicy","tspLogPolicy","options","info"],"sources":["C:\\Users\\M.Kumagai\\Documents\\React\\ai-foundry-chatbot4\\frontend\\node_modules\\@azure\\core-rest-pipeline\\src\\policies\\logPolicy.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { Debugger } from \"@azure/logger\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { logger as coreLogger } from \"../log.js\";\nimport {\n  logPolicyName as tspLogPolicyName,\n  logPolicy as tspLogPolicy,\n} from \"@typespec/ts-http-runtime/internal/policies\";\n\n/**\n * The programmatic identifier of the logPolicy.\n */\nexport const logPolicyName = tspLogPolicyName;\n\n/**\n * Options to configure the logPolicy.\n */\nexport interface LogPolicyOptions {\n  /**\n   * Header names whose values will be logged when logging is enabled.\n   * Defaults include a list of well-known safe headers. Any headers\n   * specified in this field will be added to that list.  Any other values will\n   * be written to logs as \"REDACTED\".\n   */\n  additionalAllowedHeaderNames?: string[];\n\n  /**\n   * Query string names whose values will be logged when logging is enabled. By default no\n   * query string values are logged.\n   */\n  additionalAllowedQueryParameters?: string[];\n\n  /**\n   * The log function to use for writing pipeline logs.\n   * Defaults to core-http's built-in logger.\n   * Compatible with the `debug` library.\n   */\n  logger?: Debugger;\n}\n\n/**\n * A policy that logs all requests and responses.\n * @param options - Options to configure logPolicy.\n */\nexport function logPolicy(options: LogPolicyOptions = {}): PipelinePolicy {\n  return tspLogPolicy({\n    logger: coreLogger.info,\n    ...options,\n  });\n}\n"],"mappings":"AAAA;AACA;AAIA,SAASA,MAAM,IAAIC,UAAU,QAAQ,WAAW;AAChD,SACEC,aAAa,IAAIC,gBAAgB,EACjCC,SAAS,IAAIC,YAAY,QACpB,6CAA6C;AAEpD;;;AAGA,OAAO,MAAMH,aAAa,GAAGC,gBAAgB;AA4B7C;;;;AAIA,OAAM,SAAUC,SAASA,CAACE,OAAA,GAA4B,EAAE;EACtD,OAAOD,YAAY,CAAC;IAClBL,MAAM,EAAEC,UAAU,CAACM,IAAI;IACvB,GAAGD;GACJ,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}