{"ast":null,"code":"/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\nimport * as coreHttpCompat from \"@azure/core-http-compat\";\nimport { ServiceImpl, ContainerImpl, BlobImpl, PageBlobImpl, AppendBlobImpl, BlockBlobImpl } from \"./operations/index.js\";\nexport class StorageClient extends coreHttpCompat.ExtendedServiceClient {\n  url;\n  version;\n  /**\n   * Initializes a new instance of the StorageClient class.\n   * @param url The URL of the service account, container, or blob that is the target of the desired\n   *            operation.\n   * @param options The parameter options\n   */\n  constructor(url, options) {\n    if (url === undefined) {\n      throw new Error(\"'url' cannot be null\");\n    }\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults = {\n      requestContentType: \"application/json; charset=utf-8\"\n    };\n    const packageDetails = `azsdk-js-azure-storage-blob/12.28.0`;\n    const userAgentPrefix = options.userAgentOptions && options.userAgentOptions.userAgentPrefix ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}` : `${packageDetails}`;\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      endpoint: options.endpoint ?? options.baseUri ?? \"{url}\"\n    };\n    super(optionsWithDefaults);\n    // Parameter assignments\n    this.url = url;\n    // Assigning values to Constant parameters\n    this.version = options.version || \"2025-07-05\";\n    this.service = new ServiceImpl(this);\n    this.container = new ContainerImpl(this);\n    this.blob = new BlobImpl(this);\n    this.pageBlob = new PageBlobImpl(this);\n    this.appendBlob = new AppendBlobImpl(this);\n    this.blockBlob = new BlockBlobImpl(this);\n  }\n  service;\n  container;\n  blob;\n  pageBlob;\n  appendBlob;\n  blockBlob;\n}","map":{"version":3,"names":["coreHttpCompat","ServiceImpl","ContainerImpl","BlobImpl","PageBlobImpl","AppendBlobImpl","BlockBlobImpl","StorageClient","ExtendedServiceClient","url","version","constructor","options","undefined","Error","defaults","requestContentType","packageDetails","userAgentPrefix","userAgentOptions","optionsWithDefaults","endpoint","baseUri","service","container","blob","pageBlob","appendBlob","blockBlob"],"sources":["C:\\Users\\M.Kumagai\\Documents\\React\\ai-foundry-chatbot4\\frontend\\node_modules\\@azure\\storage-blob\\src\\generated\\src\\storageClient.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttpCompat from \"@azure/core-http-compat\";\nimport {\n  ServiceImpl,\n  ContainerImpl,\n  BlobImpl,\n  PageBlobImpl,\n  AppendBlobImpl,\n  BlockBlobImpl,\n} from \"./operations/index.js\";\nimport {\n  Service,\n  Container,\n  Blob,\n  PageBlob,\n  AppendBlob,\n  BlockBlob,\n} from \"./operationsInterfaces/index.js\";\nimport { StorageClientOptionalParams } from \"./models/index.js\";\n\nexport class StorageClient extends coreHttpCompat.ExtendedServiceClient {\n  url: string;\n  version: string;\n\n  /**\n   * Initializes a new instance of the StorageClient class.\n   * @param url The URL of the service account, container, or blob that is the target of the desired\n   *            operation.\n   * @param options The parameter options\n   */\n  constructor(url: string, options?: StorageClientOptionalParams) {\n    if (url === undefined) {\n      throw new Error(\"'url' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: StorageClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n    };\n\n    const packageDetails = `azsdk-js-azure-storage-blob/12.28.0`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix,\n      },\n      endpoint: options.endpoint ?? options.baseUri ?? \"{url}\",\n    };\n    super(optionsWithDefaults);\n    // Parameter assignments\n    this.url = url;\n\n    // Assigning values to Constant parameters\n    this.version = options.version || \"2025-07-05\";\n    this.service = new ServiceImpl(this);\n    this.container = new ContainerImpl(this);\n    this.blob = new BlobImpl(this);\n    this.pageBlob = new PageBlobImpl(this);\n    this.appendBlob = new AppendBlobImpl(this);\n    this.blockBlob = new BlockBlobImpl(this);\n  }\n\n  service: Service;\n  container: Container;\n  blob: Blob;\n  pageBlob: PageBlob;\n  appendBlob: AppendBlob;\n  blockBlob: BlockBlob;\n}\n"],"mappings":"AAAA;;;;;;;AAQA,OAAO,KAAKA,cAAc,MAAM,yBAAyB;AACzD,SACEC,WAAW,EACXC,aAAa,EACbC,QAAQ,EACRC,YAAY,EACZC,cAAc,EACdC,aAAa,QACR,uBAAuB;AAW9B,OAAM,MAAOC,aAAc,SAAQP,cAAc,CAACQ,qBAAqB;EACrEC,GAAG;EACHC,OAAO;EAEP;;;;;;EAMAC,YAAYF,GAAW,EAAEG,OAAqC;IAC5D,IAAIH,GAAG,KAAKI,SAAS,EAAE;MACrB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;IACzC;IAEA;IACA,IAAI,CAACF,OAAO,EAAE;MACZA,OAAO,GAAG,EAAE;IACd;IACA,MAAMG,QAAQ,GAAgC;MAC5CC,kBAAkB,EAAE;KACrB;IAED,MAAMC,cAAc,GAAG,qCAAqC;IAC5D,MAAMC,eAAe,GACnBN,OAAO,CAACO,gBAAgB,IAAIP,OAAO,CAACO,gBAAgB,CAACD,eAAe,GAChE,GAAGN,OAAO,CAACO,gBAAgB,CAACD,eAAe,IAAID,cAAc,EAAE,GAC/D,GAAGA,cAAc,EAAE;IAEzB,MAAMG,mBAAmB,GAAG;MAC1B,GAAGL,QAAQ;MACX,GAAGH,OAAO;MACVO,gBAAgB,EAAE;QAChBD;OACD;MACDG,QAAQ,EAAET,OAAO,CAACS,QAAQ,IAAIT,OAAO,CAACU,OAAO,IAAI;KAClD;IACD,KAAK,CAACF,mBAAmB,CAAC;IAC1B;IACA,IAAI,CAACX,GAAG,GAAGA,GAAG;IAEd;IACA,IAAI,CAACC,OAAO,GAAGE,OAAO,CAACF,OAAO,IAAI,YAAY;IAC9C,IAAI,CAACa,OAAO,GAAG,IAAItB,WAAW,CAAC,IAAI,CAAC;IACpC,IAAI,CAACuB,SAAS,GAAG,IAAItB,aAAa,CAAC,IAAI,CAAC;IACxC,IAAI,CAACuB,IAAI,GAAG,IAAItB,QAAQ,CAAC,IAAI,CAAC;IAC9B,IAAI,CAACuB,QAAQ,GAAG,IAAItB,YAAY,CAAC,IAAI,CAAC;IACtC,IAAI,CAACuB,UAAU,GAAG,IAAItB,cAAc,CAAC,IAAI,CAAC;IAC1C,IAAI,CAACuB,SAAS,GAAG,IAAItB,aAAa,CAAC,IAAI,CAAC;EAC1C;EAEAiB,OAAO;EACPC,SAAS;EACTC,IAAI;EACJC,QAAQ;EACRC,UAAU;EACVC,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}