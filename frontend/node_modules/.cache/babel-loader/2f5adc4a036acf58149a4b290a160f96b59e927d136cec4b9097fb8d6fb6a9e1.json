{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { generateUUID } from \"./uuidUtils.common.js\";\n// NOTE: This could be undefined if not used in a secure context\nconst uuidFunction = typeof globalThis?.crypto?.randomUUID === \"function\" ? globalThis.crypto.randomUUID.bind(globalThis.crypto) : generateUUID;\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n */\nexport function randomUUID() {\n  return uuidFunction();\n}","map":{"version":3,"names":["generateUUID","uuidFunction","globalThis","crypto","randomUUID","bind"],"sources":["C:\\Users\\M.Kumagai\\Documents\\React\\ai-foundry-chatbot4\\frontend\\node_modules\\@typespec\\ts-http-runtime\\src\\util\\uuidUtils-browser.mts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { generateUUID } from \"./uuidUtils.common.js\";\n\ninterface Crypto {\n  randomUUID(): string;\n}\n\ndeclare const globalThis: {\n  crypto: Crypto;\n};\n\n// NOTE: This could be undefined if not used in a secure context\nconst uuidFunction =\n  typeof globalThis?.crypto?.randomUUID === \"function\"\n    ? globalThis.crypto.randomUUID.bind(globalThis.crypto)\n    : generateUUID;\n\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n */\nexport function randomUUID(): string {\n  return uuidFunction();\n}\n"],"mappings":"AAAA;AACA;AAEA,SAASA,YAAY,QAAQ,uBAAuB;AAUpD;AACA,MAAMC,YAAY,GAChB,OAAOC,UAAU,EAAEC,MAAM,EAAEC,UAAU,KAAK,UAAU,GAChDF,UAAU,CAACC,MAAM,CAACC,UAAU,CAACC,IAAI,CAACH,UAAU,CAACC,MAAM,CAAC,GACpDH,YAAY;AAElB;;;;;AAKA,OAAM,SAAUI,UAAUA,CAAA;EACxB,OAAOH,YAAY,EAAE;AACvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}