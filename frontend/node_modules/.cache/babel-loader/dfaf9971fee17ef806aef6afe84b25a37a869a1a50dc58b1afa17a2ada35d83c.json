{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { ipRangeToString } from \"./SasIPRange.js\";\nimport { truncatedISO8061Date } from \"../utils/utils.common.js\";\n/**\n * Protocols for generated SAS.\n */\nexport var SASProtocol;\n(function (SASProtocol) {\n  /**\n   * Protocol that allows HTTPS only\n   */\n  SASProtocol[\"Https\"] = \"https\";\n  /**\n   * Protocol that allows both HTTPS and HTTP\n   */\n  SASProtocol[\"HttpsAndHttp\"] = \"https,http\";\n})(SASProtocol || (SASProtocol = {}));\n/**\n * Represents the components that make up an Azure Storage SAS' query parameters. This type is not constructed directly\n * by the user; it is only generated by the {@link AccountSASSignatureValues} and {@link BlobSASSignatureValues}\n * types. Once generated, it can be encoded into a {@link String} and appended to a URL directly (though caution should\n * be taken here in case there are existing query parameters, which might affect the appropriate means of appending\n * these query parameters).\n *\n * NOTE: Instances of this class are immutable.\n */\nexport class SASQueryParameters {\n  /**\n   * The storage API version.\n   */\n  version;\n  /**\n   * Optional. The allowed HTTP protocol(s).\n   */\n  protocol;\n  /**\n   * Optional. The start time for this SAS token.\n   */\n  startsOn;\n  /**\n   * Optional only when identifier is provided. The expiry time for this SAS token.\n   */\n  expiresOn;\n  /**\n   * Optional only when identifier is provided.\n   * Please refer to {@link AccountSASPermissions}, {@link BlobSASPermissions}, or {@link ContainerSASPermissions} for\n   * more details.\n   */\n  permissions;\n  /**\n   * Optional. The storage services being accessed (only for Account SAS). Please refer to {@link AccountSASServices}\n   * for more details.\n   */\n  services;\n  /**\n   * Optional. The storage resource types being accessed (only for Account SAS). Please refer to\n   * {@link AccountSASResourceTypes} for more details.\n   */\n  resourceTypes;\n  /**\n   * Optional. The signed identifier (only for {@link BlobSASSignatureValues}).\n   *\n   * @see https://learn.microsoft.com/rest/api/storageservices/establishing-a-stored-access-policy\n   */\n  identifier;\n  /**\n   * Optional. Encryption scope to use when sending requests authorized with this SAS URI.\n   */\n  encryptionScope;\n  /**\n   * Optional. Specifies which resources are accessible via the SAS (only for {@link BlobSASSignatureValues}).\n   * @see https://learn.microsoft.com/rest/api/storageservices/create-service-sas#specifying-the-signed-resource-blob-service-only\n   */\n  resource;\n  /**\n   * The signature for the SAS token.\n   */\n  signature;\n  /**\n   * Value for cache-control header in Blob/File Service SAS.\n   */\n  cacheControl;\n  /**\n   * Value for content-disposition header in Blob/File Service SAS.\n   */\n  contentDisposition;\n  /**\n   * Value for content-encoding header in Blob/File Service SAS.\n   */\n  contentEncoding;\n  /**\n   * Value for content-length header in Blob/File Service SAS.\n   */\n  contentLanguage;\n  /**\n   * Value for content-type header in Blob/File Service SAS.\n   */\n  contentType;\n  /**\n   * Inner value of getter ipRange.\n   */\n  ipRangeInner;\n  /**\n   * The Azure Active Directory object ID in GUID format.\n   * Property of user delegation key.\n   */\n  signedOid;\n  /**\n   * The Azure Active Directory tenant ID in GUID format.\n   * Property of user delegation key.\n   */\n  signedTenantId;\n  /**\n   * The date-time the key is active.\n   * Property of user delegation key.\n   */\n  signedStartsOn;\n  /**\n   * The date-time the key expires.\n   * Property of user delegation key.\n   */\n  signedExpiresOn;\n  /**\n   * Abbreviation of the Azure Storage service that accepts the user delegation key.\n   * Property of user delegation key.\n   */\n  signedService;\n  /**\n   * The service version that created the user delegation key.\n   * Property of user delegation key.\n   */\n  signedVersion;\n  /**\n   * Authorized AAD Object ID in GUID format. The AAD Object ID of a user authorized by the owner of the User Delegation Key\n   * to perform the action granted by the SAS. The Azure Storage service will ensure that the owner of the user delegation key\n   * has the required permissions before granting access but no additional permission check for the user specified in\n   * this value will be performed. This is only used for User Delegation SAS.\n   */\n  preauthorizedAgentObjectId;\n  /**\n   * A GUID value that will be logged in the storage diagnostic logs and can be used to correlate SAS generation with storage resource access.\n   * This is only used for User Delegation SAS.\n   */\n  correlationId;\n  /**\n   * Optional. IP range allowed for this SAS.\n   *\n   * @readonly\n   */\n  get ipRange() {\n    if (this.ipRangeInner) {\n      return {\n        end: this.ipRangeInner.end,\n        start: this.ipRangeInner.start\n      };\n    }\n    return undefined;\n  }\n  constructor(version, signature, permissionsOrOptions, services, resourceTypes, protocol, startsOn, expiresOn, ipRange, identifier, resource, cacheControl, contentDisposition, contentEncoding, contentLanguage, contentType, userDelegationKey, preauthorizedAgentObjectId, correlationId, encryptionScope) {\n    this.version = version;\n    this.signature = signature;\n    if (permissionsOrOptions !== undefined && typeof permissionsOrOptions !== \"string\") {\n      // SASQueryParametersOptions\n      this.permissions = permissionsOrOptions.permissions;\n      this.services = permissionsOrOptions.services;\n      this.resourceTypes = permissionsOrOptions.resourceTypes;\n      this.protocol = permissionsOrOptions.protocol;\n      this.startsOn = permissionsOrOptions.startsOn;\n      this.expiresOn = permissionsOrOptions.expiresOn;\n      this.ipRangeInner = permissionsOrOptions.ipRange;\n      this.identifier = permissionsOrOptions.identifier;\n      this.encryptionScope = permissionsOrOptions.encryptionScope;\n      this.resource = permissionsOrOptions.resource;\n      this.cacheControl = permissionsOrOptions.cacheControl;\n      this.contentDisposition = permissionsOrOptions.contentDisposition;\n      this.contentEncoding = permissionsOrOptions.contentEncoding;\n      this.contentLanguage = permissionsOrOptions.contentLanguage;\n      this.contentType = permissionsOrOptions.contentType;\n      if (permissionsOrOptions.userDelegationKey) {\n        this.signedOid = permissionsOrOptions.userDelegationKey.signedObjectId;\n        this.signedTenantId = permissionsOrOptions.userDelegationKey.signedTenantId;\n        this.signedStartsOn = permissionsOrOptions.userDelegationKey.signedStartsOn;\n        this.signedExpiresOn = permissionsOrOptions.userDelegationKey.signedExpiresOn;\n        this.signedService = permissionsOrOptions.userDelegationKey.signedService;\n        this.signedVersion = permissionsOrOptions.userDelegationKey.signedVersion;\n        this.preauthorizedAgentObjectId = permissionsOrOptions.preauthorizedAgentObjectId;\n        this.correlationId = permissionsOrOptions.correlationId;\n      }\n    } else {\n      this.services = services;\n      this.resourceTypes = resourceTypes;\n      this.expiresOn = expiresOn;\n      this.permissions = permissionsOrOptions;\n      this.protocol = protocol;\n      this.startsOn = startsOn;\n      this.ipRangeInner = ipRange;\n      this.encryptionScope = encryptionScope;\n      this.identifier = identifier;\n      this.resource = resource;\n      this.cacheControl = cacheControl;\n      this.contentDisposition = contentDisposition;\n      this.contentEncoding = contentEncoding;\n      this.contentLanguage = contentLanguage;\n      this.contentType = contentType;\n      if (userDelegationKey) {\n        this.signedOid = userDelegationKey.signedObjectId;\n        this.signedTenantId = userDelegationKey.signedTenantId;\n        this.signedStartsOn = userDelegationKey.signedStartsOn;\n        this.signedExpiresOn = userDelegationKey.signedExpiresOn;\n        this.signedService = userDelegationKey.signedService;\n        this.signedVersion = userDelegationKey.signedVersion;\n        this.preauthorizedAgentObjectId = preauthorizedAgentObjectId;\n        this.correlationId = correlationId;\n      }\n    }\n  }\n  /**\n   * Encodes all SAS query parameters into a string that can be appended to a URL.\n   *\n   */\n  toString() {\n    const params = [\"sv\", \"ss\", \"srt\", \"spr\", \"st\", \"se\", \"sip\", \"si\", \"ses\", \"skoid\",\n    // Signed object ID\n    \"sktid\",\n    // Signed tenant ID\n    \"skt\",\n    // Signed key start time\n    \"ske\",\n    // Signed key expiry time\n    \"sks\",\n    // Signed key service\n    \"skv\",\n    // Signed key version\n    \"sr\", \"sp\", \"sig\", \"rscc\", \"rscd\", \"rsce\", \"rscl\", \"rsct\", \"saoid\", \"scid\"];\n    const queries = [];\n    for (const param of params) {\n      switch (param) {\n        case \"sv\":\n          this.tryAppendQueryParameter(queries, param, this.version);\n          break;\n        case \"ss\":\n          this.tryAppendQueryParameter(queries, param, this.services);\n          break;\n        case \"srt\":\n          this.tryAppendQueryParameter(queries, param, this.resourceTypes);\n          break;\n        case \"spr\":\n          this.tryAppendQueryParameter(queries, param, this.protocol);\n          break;\n        case \"st\":\n          this.tryAppendQueryParameter(queries, param, this.startsOn ? truncatedISO8061Date(this.startsOn, false) : undefined);\n          break;\n        case \"se\":\n          this.tryAppendQueryParameter(queries, param, this.expiresOn ? truncatedISO8061Date(this.expiresOn, false) : undefined);\n          break;\n        case \"sip\":\n          this.tryAppendQueryParameter(queries, param, this.ipRange ? ipRangeToString(this.ipRange) : undefined);\n          break;\n        case \"si\":\n          this.tryAppendQueryParameter(queries, param, this.identifier);\n          break;\n        case \"ses\":\n          this.tryAppendQueryParameter(queries, param, this.encryptionScope);\n          break;\n        case \"skoid\":\n          // Signed object ID\n          this.tryAppendQueryParameter(queries, param, this.signedOid);\n          break;\n        case \"sktid\":\n          // Signed tenant ID\n          this.tryAppendQueryParameter(queries, param, this.signedTenantId);\n          break;\n        case \"skt\":\n          // Signed key start time\n          this.tryAppendQueryParameter(queries, param, this.signedStartsOn ? truncatedISO8061Date(this.signedStartsOn, false) : undefined);\n          break;\n        case \"ske\":\n          // Signed key expiry time\n          this.tryAppendQueryParameter(queries, param, this.signedExpiresOn ? truncatedISO8061Date(this.signedExpiresOn, false) : undefined);\n          break;\n        case \"sks\":\n          // Signed key service\n          this.tryAppendQueryParameter(queries, param, this.signedService);\n          break;\n        case \"skv\":\n          // Signed key version\n          this.tryAppendQueryParameter(queries, param, this.signedVersion);\n          break;\n        case \"sr\":\n          this.tryAppendQueryParameter(queries, param, this.resource);\n          break;\n        case \"sp\":\n          this.tryAppendQueryParameter(queries, param, this.permissions);\n          break;\n        case \"sig\":\n          this.tryAppendQueryParameter(queries, param, this.signature);\n          break;\n        case \"rscc\":\n          this.tryAppendQueryParameter(queries, param, this.cacheControl);\n          break;\n        case \"rscd\":\n          this.tryAppendQueryParameter(queries, param, this.contentDisposition);\n          break;\n        case \"rsce\":\n          this.tryAppendQueryParameter(queries, param, this.contentEncoding);\n          break;\n        case \"rscl\":\n          this.tryAppendQueryParameter(queries, param, this.contentLanguage);\n          break;\n        case \"rsct\":\n          this.tryAppendQueryParameter(queries, param, this.contentType);\n          break;\n        case \"saoid\":\n          this.tryAppendQueryParameter(queries, param, this.preauthorizedAgentObjectId);\n          break;\n        case \"scid\":\n          this.tryAppendQueryParameter(queries, param, this.correlationId);\n          break;\n      }\n    }\n    return queries.join(\"&\");\n  }\n  /**\n   * A private helper method used to filter and append query key/value pairs into an array.\n   *\n   * @param queries -\n   * @param key -\n   * @param value -\n   */\n  tryAppendQueryParameter(queries, key, value) {\n    if (!value) {\n      return;\n    }\n    key = encodeURIComponent(key);\n    value = encodeURIComponent(value);\n    if (key.length > 0 && value.length > 0) {\n      queries.push(`${key}=${value}`);\n    }\n  }\n}","map":{"version":3,"names":["ipRangeToString","truncatedISO8061Date","SASProtocol","SASQueryParameters","version","protocol","startsOn","expiresOn","permissions","services","resourceTypes","identifier","encryptionScope","resource","signature","cacheControl","contentDisposition","contentEncoding","contentLanguage","contentType","ipRangeInner","signedOid","signedTenantId","signedStartsOn","signedExpiresOn","signedService","signedVersion","preauthorizedAgentObjectId","correlationId","ipRange","end","start","undefined","constructor","permissionsOrOptions","userDelegationKey","signedObjectId","toString","params","queries","param","tryAppendQueryParameter","join","key","value","encodeURIComponent","length","push"],"sources":["C:\\Users\\M.Kumagai\\Documents\\React\\ai-foundry-chatbot4\\frontend\\node_modules\\@azure\\storage-blob\\src\\sas\\SASQueryParameters.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { SasIPRange } from \"./SasIPRange.js\";\nimport { ipRangeToString } from \"./SasIPRange.js\";\nimport { truncatedISO8061Date } from \"../utils/utils.common.js\";\nimport type { UserDelegationKey } from \"../BlobServiceClient.js\";\n\n/**\n * Protocols for generated SAS.\n */\nexport enum SASProtocol {\n  /**\n   * Protocol that allows HTTPS only\n   */\n  Https = \"https\",\n\n  /**\n   * Protocol that allows both HTTPS and HTTP\n   */\n  HttpsAndHttp = \"https,http\",\n}\n\n/**\n * Options to construct {@link SASQueryParameters}.\n */\nexport interface SASQueryParametersOptions {\n  /**\n   * Optional only when identifier is provided.\n   * Please refer to {@link AccountSASPermissions}, {@link BlobSASPermissions}, or {@link ContainerSASPermissions} for\n   * more details.\n   */\n  permissions?: string;\n  /**\n   * Optional. The storage services being accessed (only for Account SAS). Please refer to {@link AccountSASServices}\n   * for more details.\n   */\n  services?: string;\n  /**\n   * Optional. The storage resource types being accessed (only for Account SAS). Please refer to\n   * {@link AccountSASResourceTypes} for more details.\n   */\n  resourceTypes?: string;\n  /**\n   * Optional. The allowed HTTP protocol(s).\n   */\n  protocol?: SASProtocol;\n  /**\n   * Optional. The start time for this SAS token.\n   */\n  startsOn?: Date;\n  /**\n   * Optional only when identifier is provided. The expiry time for this SAS token.\n   */\n  expiresOn?: Date;\n  /**\n   * Optional. IP ranges allowed in this SAS.\n   */\n  ipRange?: SasIPRange;\n  /**\n   * Optional. The signed identifier (only for {@link BlobSASSignatureValues}).\n   *\n   * @see https://learn.microsoft.com/rest/api/storageservices/establishing-a-stored-access-policy\n   */\n  identifier?: string;\n  /**\n   * Optional. Encryption scope to use when sending requests authorized with this SAS URI.\n   */\n  encryptionScope?: string;\n  /**\n   * Optional. Specifies which resources are accessible via the SAS (only for {@link BlobSASSignatureValues}).\n   * @see https://learn.microsoft.com/rest/api/storageservices/create-service-sas#specifying-the-signed-resource-blob-service-only\n   */\n  resource?: string;\n  /**\n   * Value for cache-control header in Blob/File Service SAS.\n   */\n  cacheControl?: string;\n  /**\n   * Value for content-disposition header in Blob/File Service SAS.\n   */\n  contentDisposition?: string;\n  /**\n   * Value for content-encoding header in Blob/File Service SAS.\n   */\n  contentEncoding?: string;\n  /**\n   * Value for content-length header in Blob/File Service SAS.\n   */\n  contentLanguage?: string;\n  /**\n   * Value for content-type header in Blob/File Service SAS.\n   */\n  contentType?: string;\n  /**\n   * User delegation key properties.\n   */\n  userDelegationKey?: UserDelegationKey;\n  /**\n   * Authorized AAD Object ID in GUID format. The AAD Object ID of a user authorized by the owner of the User Delegation Key\n   * to perform the action granted by the SAS. The Azure Storage service will ensure that the owner of the user delegation key\n   * has the required permissions before granting access but no additional permission check for the user specified in\n   * this value will be performed. This cannot be used in conjuction with {@link signedUnauthorizedUserObjectId}.\n   * This is only used for User Delegation SAS.\n   */\n  preauthorizedAgentObjectId?: string;\n  /**\n   * A GUID value that will be logged in the storage diagnostic logs and can be used to correlate SAS generation with storage resource access.\n   * This is only used for User Delegation SAS.\n   */\n  correlationId?: string;\n}\n\n/**\n * Represents the components that make up an Azure Storage SAS' query parameters. This type is not constructed directly\n * by the user; it is only generated by the {@link AccountSASSignatureValues} and {@link BlobSASSignatureValues}\n * types. Once generated, it can be encoded into a {@link String} and appended to a URL directly (though caution should\n * be taken here in case there are existing query parameters, which might affect the appropriate means of appending\n * these query parameters).\n *\n * NOTE: Instances of this class are immutable.\n */\nexport class SASQueryParameters {\n  /**\n   * The storage API version.\n   */\n  public readonly version: string;\n\n  /**\n   * Optional. The allowed HTTP protocol(s).\n   */\n  public readonly protocol?: SASProtocol;\n\n  /**\n   * Optional. The start time for this SAS token.\n   */\n  public readonly startsOn?: Date;\n\n  /**\n   * Optional only when identifier is provided. The expiry time for this SAS token.\n   */\n  public readonly expiresOn?: Date;\n\n  /**\n   * Optional only when identifier is provided.\n   * Please refer to {@link AccountSASPermissions}, {@link BlobSASPermissions}, or {@link ContainerSASPermissions} for\n   * more details.\n   */\n  public readonly permissions?: string;\n\n  /**\n   * Optional. The storage services being accessed (only for Account SAS). Please refer to {@link AccountSASServices}\n   * for more details.\n   */\n  public readonly services?: string;\n\n  /**\n   * Optional. The storage resource types being accessed (only for Account SAS). Please refer to\n   * {@link AccountSASResourceTypes} for more details.\n   */\n  public readonly resourceTypes?: string;\n\n  /**\n   * Optional. The signed identifier (only for {@link BlobSASSignatureValues}).\n   *\n   * @see https://learn.microsoft.com/rest/api/storageservices/establishing-a-stored-access-policy\n   */\n  public readonly identifier?: string;\n\n  /**\n   * Optional. Encryption scope to use when sending requests authorized with this SAS URI.\n   */\n  public readonly encryptionScope?: string;\n\n  /**\n   * Optional. Specifies which resources are accessible via the SAS (only for {@link BlobSASSignatureValues}).\n   * @see https://learn.microsoft.com/rest/api/storageservices/create-service-sas#specifying-the-signed-resource-blob-service-only\n   */\n  public readonly resource?: string;\n\n  /**\n   * The signature for the SAS token.\n   */\n  public readonly signature: string;\n\n  /**\n   * Value for cache-control header in Blob/File Service SAS.\n   */\n  public readonly cacheControl?: string;\n\n  /**\n   * Value for content-disposition header in Blob/File Service SAS.\n   */\n  public readonly contentDisposition?: string;\n\n  /**\n   * Value for content-encoding header in Blob/File Service SAS.\n   */\n  public readonly contentEncoding?: string;\n\n  /**\n   * Value for content-length header in Blob/File Service SAS.\n   */\n  public readonly contentLanguage?: string;\n\n  /**\n   * Value for content-type header in Blob/File Service SAS.\n   */\n  public readonly contentType?: string;\n\n  /**\n   * Inner value of getter ipRange.\n   */\n  private readonly ipRangeInner?: SasIPRange;\n\n  /**\n   * The Azure Active Directory object ID in GUID format.\n   * Property of user delegation key.\n   */\n  private readonly signedOid?: string;\n\n  /**\n   * The Azure Active Directory tenant ID in GUID format.\n   * Property of user delegation key.\n   */\n  private readonly signedTenantId?: string;\n\n  /**\n   * The date-time the key is active.\n   * Property of user delegation key.\n   */\n  private readonly signedStartsOn?: Date;\n\n  /**\n   * The date-time the key expires.\n   * Property of user delegation key.\n   */\n  private readonly signedExpiresOn?: Date;\n\n  /**\n   * Abbreviation of the Azure Storage service that accepts the user delegation key.\n   * Property of user delegation key.\n   */\n  private readonly signedService?: string;\n\n  /**\n   * The service version that created the user delegation key.\n   * Property of user delegation key.\n   */\n  private readonly signedVersion?: string;\n\n  /**\n   * Authorized AAD Object ID in GUID format. The AAD Object ID of a user authorized by the owner of the User Delegation Key\n   * to perform the action granted by the SAS. The Azure Storage service will ensure that the owner of the user delegation key\n   * has the required permissions before granting access but no additional permission check for the user specified in\n   * this value will be performed. This is only used for User Delegation SAS.\n   */\n  public readonly preauthorizedAgentObjectId?: string;\n\n  /**\n   * A GUID value that will be logged in the storage diagnostic logs and can be used to correlate SAS generation with storage resource access.\n   * This is only used for User Delegation SAS.\n   */\n  public readonly correlationId?: string;\n\n  /**\n   * Optional. IP range allowed for this SAS.\n   *\n   * @readonly\n   */\n  public get ipRange(): SasIPRange | undefined {\n    if (this.ipRangeInner) {\n      return {\n        end: this.ipRangeInner.end,\n        start: this.ipRangeInner.start,\n      };\n    }\n    return undefined;\n  }\n\n  /**\n   * Creates an instance of SASQueryParameters.\n   *\n   * @param version - Representing the storage version\n   * @param signature - Representing the signature for the SAS token\n   * @param permissions - Representing the storage permissions\n   * @param services - Representing the storage services being accessed (only for Account SAS)\n   * @param resourceTypes - Representing the storage resource types being accessed (only for Account SAS)\n   * @param protocol - Representing the allowed HTTP protocol(s)\n   * @param startsOn - Representing the start time for this SAS token\n   * @param expiresOn - Representing the expiry time for this SAS token\n   * @param ipRange - Representing the range of valid IP addresses for this SAS token\n   * @param identifier - Representing the signed identifier (only for Service SAS)\n   * @param resource - Representing the storage container or blob (only for Service SAS)\n   * @param cacheControl - Representing the cache-control header (only for Blob/File Service SAS)\n   * @param contentDisposition - Representing the content-disposition header (only for Blob/File Service SAS)\n   * @param contentEncoding - Representing the content-encoding header (only for Blob/File Service SAS)\n   * @param contentLanguage - Representing the content-language header (only for Blob/File Service SAS)\n   * @param contentType - Representing the content-type header (only for Blob/File Service SAS)\n   * @param userDelegationKey - Representing the user delegation key properties\n   * @param preauthorizedAgentObjectId - Representing the authorized AAD Object ID (only for User Delegation SAS)\n   * @param correlationId - Representing the correlation ID (only for User Delegation SAS)\n   * @param encryptionScope -\n   */\n  constructor(\n    version: string,\n    signature: string,\n    permissions?: string,\n    services?: string,\n    resourceTypes?: string,\n    protocol?: SASProtocol,\n    startsOn?: Date,\n    expiresOn?: Date,\n    ipRange?: SasIPRange,\n    identifier?: string,\n    resource?: string,\n    cacheControl?: string,\n    contentDisposition?: string,\n    contentEncoding?: string,\n    contentLanguage?: string,\n    contentType?: string,\n    userDelegationKey?: UserDelegationKey,\n    preauthorizedAgentObjectId?: string,\n    correlationId?: string,\n    encryptionScope?: string,\n  );\n\n  /**\n   * Creates an instance of SASQueryParameters.\n   *\n   * @param version - Representing the storage version\n   * @param signature - Representing the signature for the SAS token\n   * @param options - Optional. Options to construct the SASQueryParameters.\n   */\n  constructor(version: string, signature: string, options?: SASQueryParametersOptions);\n\n  constructor(\n    version: string,\n    signature: string,\n    permissionsOrOptions?: string | SASQueryParametersOptions,\n    services?: string,\n    resourceTypes?: string,\n    protocol?: SASProtocol,\n    startsOn?: Date,\n    expiresOn?: Date,\n    ipRange?: SasIPRange,\n    identifier?: string,\n    resource?: string,\n    cacheControl?: string,\n    contentDisposition?: string,\n    contentEncoding?: string,\n    contentLanguage?: string,\n    contentType?: string,\n    userDelegationKey?: UserDelegationKey,\n    preauthorizedAgentObjectId?: string,\n    correlationId?: string,\n    encryptionScope?: string,\n  ) {\n    this.version = version;\n    this.signature = signature;\n\n    if (permissionsOrOptions !== undefined && typeof permissionsOrOptions !== \"string\") {\n      // SASQueryParametersOptions\n      this.permissions = permissionsOrOptions.permissions;\n      this.services = permissionsOrOptions.services;\n      this.resourceTypes = permissionsOrOptions.resourceTypes;\n      this.protocol = permissionsOrOptions.protocol;\n      this.startsOn = permissionsOrOptions.startsOn;\n      this.expiresOn = permissionsOrOptions.expiresOn;\n      this.ipRangeInner = permissionsOrOptions.ipRange;\n      this.identifier = permissionsOrOptions.identifier;\n      this.encryptionScope = permissionsOrOptions.encryptionScope;\n      this.resource = permissionsOrOptions.resource;\n      this.cacheControl = permissionsOrOptions.cacheControl;\n      this.contentDisposition = permissionsOrOptions.contentDisposition;\n      this.contentEncoding = permissionsOrOptions.contentEncoding;\n      this.contentLanguage = permissionsOrOptions.contentLanguage;\n      this.contentType = permissionsOrOptions.contentType;\n\n      if (permissionsOrOptions.userDelegationKey) {\n        this.signedOid = permissionsOrOptions.userDelegationKey.signedObjectId;\n        this.signedTenantId = permissionsOrOptions.userDelegationKey.signedTenantId;\n        this.signedStartsOn = permissionsOrOptions.userDelegationKey.signedStartsOn;\n        this.signedExpiresOn = permissionsOrOptions.userDelegationKey.signedExpiresOn;\n        this.signedService = permissionsOrOptions.userDelegationKey.signedService;\n        this.signedVersion = permissionsOrOptions.userDelegationKey.signedVersion;\n\n        this.preauthorizedAgentObjectId = permissionsOrOptions.preauthorizedAgentObjectId;\n        this.correlationId = permissionsOrOptions.correlationId;\n      }\n    } else {\n      this.services = services;\n      this.resourceTypes = resourceTypes;\n      this.expiresOn = expiresOn;\n      this.permissions = permissionsOrOptions;\n      this.protocol = protocol;\n      this.startsOn = startsOn;\n      this.ipRangeInner = ipRange;\n      this.encryptionScope = encryptionScope;\n      this.identifier = identifier;\n      this.resource = resource;\n      this.cacheControl = cacheControl;\n      this.contentDisposition = contentDisposition;\n      this.contentEncoding = contentEncoding;\n      this.contentLanguage = contentLanguage;\n      this.contentType = contentType;\n\n      if (userDelegationKey) {\n        this.signedOid = userDelegationKey.signedObjectId;\n        this.signedTenantId = userDelegationKey.signedTenantId;\n        this.signedStartsOn = userDelegationKey.signedStartsOn;\n        this.signedExpiresOn = userDelegationKey.signedExpiresOn;\n        this.signedService = userDelegationKey.signedService;\n        this.signedVersion = userDelegationKey.signedVersion;\n\n        this.preauthorizedAgentObjectId = preauthorizedAgentObjectId;\n        this.correlationId = correlationId;\n      }\n    }\n  }\n\n  /**\n   * Encodes all SAS query parameters into a string that can be appended to a URL.\n   *\n   */\n  public toString(): string {\n    const params: string[] = [\n      \"sv\",\n      \"ss\",\n      \"srt\",\n      \"spr\",\n      \"st\",\n      \"se\",\n      \"sip\",\n      \"si\",\n      \"ses\",\n      \"skoid\", // Signed object ID\n      \"sktid\", // Signed tenant ID\n      \"skt\", // Signed key start time\n      \"ske\", // Signed key expiry time\n      \"sks\", // Signed key service\n      \"skv\", // Signed key version\n      \"sr\",\n      \"sp\",\n      \"sig\",\n      \"rscc\",\n      \"rscd\",\n      \"rsce\",\n      \"rscl\",\n      \"rsct\",\n      \"saoid\",\n      \"scid\",\n    ];\n    const queries: string[] = [];\n\n    for (const param of params) {\n      switch (param) {\n        case \"sv\":\n          this.tryAppendQueryParameter(queries, param, this.version);\n          break;\n        case \"ss\":\n          this.tryAppendQueryParameter(queries, param, this.services);\n          break;\n        case \"srt\":\n          this.tryAppendQueryParameter(queries, param, this.resourceTypes);\n          break;\n        case \"spr\":\n          this.tryAppendQueryParameter(queries, param, this.protocol);\n          break;\n        case \"st\":\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.startsOn ? truncatedISO8061Date(this.startsOn, false) : undefined,\n          );\n          break;\n        case \"se\":\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.expiresOn ? truncatedISO8061Date(this.expiresOn, false) : undefined,\n          );\n          break;\n        case \"sip\":\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.ipRange ? ipRangeToString(this.ipRange) : undefined,\n          );\n          break;\n        case \"si\":\n          this.tryAppendQueryParameter(queries, param, this.identifier);\n          break;\n        case \"ses\":\n          this.tryAppendQueryParameter(queries, param, this.encryptionScope);\n          break;\n        case \"skoid\": // Signed object ID\n          this.tryAppendQueryParameter(queries, param, this.signedOid);\n          break;\n        case \"sktid\": // Signed tenant ID\n          this.tryAppendQueryParameter(queries, param, this.signedTenantId);\n          break;\n        case \"skt\": // Signed key start time\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.signedStartsOn ? truncatedISO8061Date(this.signedStartsOn, false) : undefined,\n          );\n          break;\n        case \"ske\": // Signed key expiry time\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.signedExpiresOn ? truncatedISO8061Date(this.signedExpiresOn, false) : undefined,\n          );\n          break;\n        case \"sks\": // Signed key service\n          this.tryAppendQueryParameter(queries, param, this.signedService);\n          break;\n        case \"skv\": // Signed key version\n          this.tryAppendQueryParameter(queries, param, this.signedVersion);\n          break;\n        case \"sr\":\n          this.tryAppendQueryParameter(queries, param, this.resource);\n          break;\n        case \"sp\":\n          this.tryAppendQueryParameter(queries, param, this.permissions);\n          break;\n        case \"sig\":\n          this.tryAppendQueryParameter(queries, param, this.signature);\n          break;\n        case \"rscc\":\n          this.tryAppendQueryParameter(queries, param, this.cacheControl);\n          break;\n        case \"rscd\":\n          this.tryAppendQueryParameter(queries, param, this.contentDisposition);\n          break;\n        case \"rsce\":\n          this.tryAppendQueryParameter(queries, param, this.contentEncoding);\n          break;\n        case \"rscl\":\n          this.tryAppendQueryParameter(queries, param, this.contentLanguage);\n          break;\n        case \"rsct\":\n          this.tryAppendQueryParameter(queries, param, this.contentType);\n          break;\n        case \"saoid\":\n          this.tryAppendQueryParameter(queries, param, this.preauthorizedAgentObjectId);\n          break;\n        case \"scid\":\n          this.tryAppendQueryParameter(queries, param, this.correlationId);\n          break;\n      }\n    }\n    return queries.join(\"&\");\n  }\n\n  /**\n   * A private helper method used to filter and append query key/value pairs into an array.\n   *\n   * @param queries -\n   * @param key -\n   * @param value -\n   */\n  private tryAppendQueryParameter(queries: string[], key: string, value?: string): void {\n    if (!value) {\n      return;\n    }\n\n    key = encodeURIComponent(key);\n    value = encodeURIComponent(value);\n    if (key.length > 0 && value.length > 0) {\n      queries.push(`${key}=${value}`);\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}