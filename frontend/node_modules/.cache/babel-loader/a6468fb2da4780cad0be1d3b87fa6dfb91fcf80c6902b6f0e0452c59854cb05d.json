{"ast":null,"code":"// src/utils/export.js\n\n// Import jsPDF for PDF export\nimport { jsPDF } from \"jspdf\";\n\n// Import docx and file-saver for Word export\nimport { Document, Packer, Paragraph, TextRun } from \"docx\";\nimport { saveAs } from \"file-saver\";\n\n/**\r\n * Export chat messages to PDF file.\r\n * @param {Array} messages - Array of message objects { role, text, time }\r\n */\nexport const exportToPdf = messages => {\n  const doc = new jsPDF();\n  let y = 10; // vertical starting point on page\n\n  messages.forEach(msg => {\n    // Determine prefix based on role\n    const prefix = msg.role === \"user\" ? \"You: \" : msg.role === \"assistant\" ? \"Assistant: \" : \"System: \";\n    const text = prefix + msg.text;\n\n    // Split long text to fit page width\n    const lines = doc.splitTextToSize(text, 180);\n    doc.text(lines, 10, y);\n    y += lines.length * 10;\n\n    // Add new page if bottom is reached\n    if (y > 280) {\n      doc.addPage();\n      y = 10;\n    }\n  });\n\n  // Save PDF with filename\n  doc.save(\"chat-export.pdf\");\n};\n\n/**\r\n * Export chat messages to Word (.docx) file.\r\n * @param {Array} messages - Array of message objects { role, text, time }\r\n */\nexport const exportToDocx = async messages => {\n  // Create a new Word Document\n  const doc = new Document({\n    creator: \"Azure Foundry Chat App\",\n    title: \"Chat Export\",\n    description: \"Chat conversation exported from Azure Foundry Chat App\",\n    sections: [{\n      children: messages.map(msg => new Paragraph({\n        children: [new TextRun({\n          text: (msg.role === \"user\" ? \"You: \" : msg.role === \"assistant\" ? \"Assistant: \" : \"System: \") + msg.text,\n          bold: msg.role === \"user\",\n          color: msg.role === \"user\" ? \"0000FF\" : \"000000\"\n        })]\n      }))\n    }]\n  });\n\n  // Generate the Word document as a Blob (must await)\n  const blob = await Packer.toBlob(doc);\n\n  // Trigger file download using file-saver\n  saveAs(blob, \"chat-export.docx\");\n};","map":{"version":3,"names":["jsPDF","Document","Packer","Paragraph","TextRun","saveAs","exportToPdf","messages","doc","y","forEach","msg","prefix","role","text","lines","splitTextToSize","length","addPage","save","exportToDocx","creator","title","description","sections","children","map","bold","color","blob","toBlob"],"sources":["C:/Users/M.Kumagai/Documents/React/ai-foundry-chatbot4/frontend/src/utils/export.js"],"sourcesContent":["// src/utils/export.js\r\n\r\n// Import jsPDF for PDF export\r\nimport { jsPDF } from \"jspdf\";\r\n\r\n// Import docx and file-saver for Word export\r\nimport {\r\n  Document,\r\n  Packer,\r\n  Paragraph,\r\n  TextRun,\r\n} from \"docx\";\r\nimport { saveAs } from \"file-saver\";\r\n\r\n/**\r\n * Export chat messages to PDF file.\r\n * @param {Array} messages - Array of message objects { role, text, time }\r\n */\r\nexport const exportToPdf = (messages) => {\r\n  const doc = new jsPDF();\r\n\r\n  let y = 10; // vertical starting point on page\r\n\r\n  messages.forEach((msg) => {\r\n    // Determine prefix based on role\r\n    const prefix =\r\n      msg.role === \"user\"\r\n        ? \"You: \"\r\n        : msg.role === \"assistant\"\r\n        ? \"Assistant: \"\r\n        : \"System: \";\r\n    const text = prefix + msg.text;\r\n\r\n    // Split long text to fit page width\r\n    const lines = doc.splitTextToSize(text, 180);\r\n    doc.text(lines, 10, y);\r\n\r\n    y += lines.length * 10;\r\n\r\n    // Add new page if bottom is reached\r\n    if (y > 280) {\r\n      doc.addPage();\r\n      y = 10;\r\n    }\r\n  });\r\n\r\n  // Save PDF with filename\r\n  doc.save(\"chat-export.pdf\");\r\n};\r\n\r\n/**\r\n * Export chat messages to Word (.docx) file.\r\n * @param {Array} messages - Array of message objects { role, text, time }\r\n */\r\nexport const exportToDocx = async (messages) => {\r\n  // Create a new Word Document\r\n  const doc = new Document({\r\n    creator: \"Azure Foundry Chat App\",\r\n    title: \"Chat Export\",\r\n    description: \"Chat conversation exported from Azure Foundry Chat App\",\r\n    sections: [\r\n      {\r\n        children: messages.map((msg) =>\r\n          new Paragraph({\r\n            children: [\r\n              new TextRun({\r\n                text:\r\n                  (msg.role === \"user\"\r\n                    ? \"You: \"\r\n                    : msg.role === \"assistant\"\r\n                    ? \"Assistant: \"\r\n                    : \"System: \") + msg.text,\r\n                bold: msg.role === \"user\",\r\n                color: msg.role === \"user\" ? \"0000FF\" : \"000000\",\r\n              }),\r\n            ],\r\n          })\r\n        ),\r\n      },\r\n    ],\r\n  });\r\n\r\n  // Generate the Word document as a Blob (must await)\r\n  const blob = await Packer.toBlob(doc);\r\n\r\n  // Trigger file download using file-saver\r\n  saveAs(blob, \"chat-export.docx\");\r\n};\r\n"],"mappings":"AAAA;;AAEA;AACA,SAASA,KAAK,QAAQ,OAAO;;AAE7B;AACA,SACEC,QAAQ,EACRC,MAAM,EACNC,SAAS,EACTC,OAAO,QACF,MAAM;AACb,SAASC,MAAM,QAAQ,YAAY;;AAEnC;AACA;AACA;AACA;AACA,OAAO,MAAMC,WAAW,GAAIC,QAAQ,IAAK;EACvC,MAAMC,GAAG,GAAG,IAAIR,KAAK,CAAC,CAAC;EAEvB,IAAIS,CAAC,GAAG,EAAE,CAAC,CAAC;;EAEZF,QAAQ,CAACG,OAAO,CAAEC,GAAG,IAAK;IACxB;IACA,MAAMC,MAAM,GACVD,GAAG,CAACE,IAAI,KAAK,MAAM,GACf,OAAO,GACPF,GAAG,CAACE,IAAI,KAAK,WAAW,GACxB,aAAa,GACb,UAAU;IAChB,MAAMC,IAAI,GAAGF,MAAM,GAAGD,GAAG,CAACG,IAAI;;IAE9B;IACA,MAAMC,KAAK,GAAGP,GAAG,CAACQ,eAAe,CAACF,IAAI,EAAE,GAAG,CAAC;IAC5CN,GAAG,CAACM,IAAI,CAACC,KAAK,EAAE,EAAE,EAAEN,CAAC,CAAC;IAEtBA,CAAC,IAAIM,KAAK,CAACE,MAAM,GAAG,EAAE;;IAEtB;IACA,IAAIR,CAAC,GAAG,GAAG,EAAE;MACXD,GAAG,CAACU,OAAO,CAAC,CAAC;MACbT,CAAC,GAAG,EAAE;IACR;EACF,CAAC,CAAC;;EAEF;EACAD,GAAG,CAACW,IAAI,CAAC,iBAAiB,CAAC;AAC7B,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMC,YAAY,GAAG,MAAOb,QAAQ,IAAK;EAC9C;EACA,MAAMC,GAAG,GAAG,IAAIP,QAAQ,CAAC;IACvBoB,OAAO,EAAE,wBAAwB;IACjCC,KAAK,EAAE,aAAa;IACpBC,WAAW,EAAE,wDAAwD;IACrEC,QAAQ,EAAE,CACR;MACEC,QAAQ,EAAElB,QAAQ,CAACmB,GAAG,CAAEf,GAAG,IACzB,IAAIR,SAAS,CAAC;QACZsB,QAAQ,EAAE,CACR,IAAIrB,OAAO,CAAC;UACVU,IAAI,EACF,CAACH,GAAG,CAACE,IAAI,KAAK,MAAM,GAChB,OAAO,GACPF,GAAG,CAACE,IAAI,KAAK,WAAW,GACxB,aAAa,GACb,UAAU,IAAIF,GAAG,CAACG,IAAI;UAC5Ba,IAAI,EAAEhB,GAAG,CAACE,IAAI,KAAK,MAAM;UACzBe,KAAK,EAAEjB,GAAG,CAACE,IAAI,KAAK,MAAM,GAAG,QAAQ,GAAG;QAC1C,CAAC,CAAC;MAEN,CAAC,CACH;IACF,CAAC;EAEL,CAAC,CAAC;;EAEF;EACA,MAAMgB,IAAI,GAAG,MAAM3B,MAAM,CAAC4B,MAAM,CAACtB,GAAG,CAAC;;EAErC;EACAH,MAAM,CAACwB,IAAI,EAAE,kBAAkB,CAAC;AAClC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}