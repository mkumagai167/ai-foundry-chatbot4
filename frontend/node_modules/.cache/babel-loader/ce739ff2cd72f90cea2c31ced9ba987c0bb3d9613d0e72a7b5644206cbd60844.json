{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M.Kumagai\\\\Documents\\\\React\\\\ai-foundry-chatbot4\\\\frontend\\\\src\\\\components\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useMsal } from \"@azure/msal-react\";\nimport { postToBackend } from \"../services/api\";\nimport ReactMarkdown from \"react-markdown\";\n\n//export default function Chat() {\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chat({\n  messages,\n  setMessages\n}) {\n  _s();\n  const {\n    instance,\n    accounts\n  } = useMsal();\n  const account = accounts[0];\n  //const [messages, setMessages] = useState([]); // { role, text, time }\n  const [text, setText] = useState(\"\");\n  const [threadId, setThreadId] = useState(null);\n  const [loading, setLoading] = useState(false);\n  async function send() {\n    if (!text.trim()) return;\n    const userMsg = {\n      role: \"user\",\n      text,\n      time: new Date().toISOString()\n    };\n    setMessages(m => [...m, userMsg]);\n    setText(\"\");\n    setLoading(true);\n    try {\n      const accessTokenResponse = await instance.acquireTokenSilent({\n        scopes: [\"api://9630bd34-dff3-4fb7-84f6-cccca22c95ca/.default\"],\n        account\n      });\n      //const resp = await postToBackend(instance, account, userMsg.text, threadId);\n      const accessToken = accessTokenResponse.accessToken;\n      const resp = await postToBackend(userMsg.text, accessToken);\n      if (resp.threadId && !threadId) {\n        setThreadId(resp.threadId);\n      }\n      const assistant = (resp.assistantMessages || []).map(m => ({\n        role: \"assistant\",\n        text: m.content ? m.content.map(c => {\n          var _c$text;\n          return ((_c$text = c.text) === null || _c$text === void 0 ? void 0 : _c$text.value) || \"\";\n        }).join(\"\\n\") : m.text || \"\",\n        time: m.createdAt\n      }));\n      setMessages(m => [...m, ...assistant]);\n    } catch (err) {\n      console.error(\"Chat error:\", err);\n      setMessages(m => [...m, {\n        role: \"system\",\n        text: `Error: ${err.message}`,\n        time: new Date().toISOString()\n      }]);\n    } finally {\n      setLoading(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      height: \"70vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        overflowY: \"auto\",\n        border: \"1px solid #ccc\",\n        borderRadius: 6,\n        padding: 12,\n        marginBottom: 10\n      },\n      children: messages.map((m, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"8px 0\",\n          textAlign: m.role === \"user\" ? \"right\" : \"left\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            display: \"inline-block\",\n            background: m.role === \"user\" ? \"#0078d7\" : \"#f3f2f1\",\n            color: m.role === \"user\" ? \"white\" : \"black\",\n            padding: \"8px 12px\",\n            borderRadius: 12,\n            maxWidth: \"75%\",\n            wordBreak: \"break-word\"\n          },\n          children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n            children: m.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        gap: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: text,\n        onChange: e => setText(e.target.value),\n        style: {\n          flex: 1,\n          padding: \"8px\"\n        },\n        onKeyDown: e => e.key === \"Enter\" && send(),\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: send,\n        disabled: loading,\n        children: loading ? \"Sending...\" : \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"+0pawaCpLnzKddWxQQaK4zVRfm4=\", false, function () {\n  return [useMsal];\n});\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useMsal","postToBackend","ReactMarkdown","jsxDEV","_jsxDEV","Chat","messages","setMessages","_s","instance","accounts","account","text","setText","threadId","setThreadId","loading","setLoading","send","trim","userMsg","role","time","Date","toISOString","m","accessTokenResponse","acquireTokenSilent","scopes","accessToken","resp","assistant","assistantMessages","map","content","c","_c$text","value","join","createdAt","err","console","error","message","style","display","flexDirection","height","children","flex","overflowY","border","borderRadius","padding","marginBottom","i","margin","textAlign","background","color","maxWidth","wordBreak","fileName","_jsxFileName","lineNumber","columnNumber","gap","onChange","e","target","onKeyDown","key","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/M.Kumagai/Documents/React/ai-foundry-chatbot4/frontend/src/components/Chat.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useMsal } from \"@azure/msal-react\";\r\nimport { postToBackend } from \"../services/api\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\n//export default function Chat() {\r\nexport default function Chat({ messages, setMessages }) {\r\n  const { instance, accounts } = useMsal();\r\n  const account = accounts[0];\r\n  //const [messages, setMessages] = useState([]); // { role, text, time }\r\n  const [text, setText] = useState(\"\");\r\n  const [threadId, setThreadId] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  async function send() {\r\n    if (!text.trim()) return;\r\n\r\n    const userMsg = {\r\n      role: \"user\",\r\n      text,\r\n      time: new Date().toISOString()\r\n    };\r\n    setMessages((m) => [...m, userMsg]);\r\n    setText(\"\");\r\n    setLoading(true);\r\n\r\n    try {\r\n      const accessTokenResponse = await instance.acquireTokenSilent({\r\n        scopes: [\"api://9630bd34-dff3-4fb7-84f6-cccca22c95ca/.default\"],\r\n        account,\r\n      });\r\n      //const resp = await postToBackend(instance, account, userMsg.text, threadId);\r\n      const accessToken = accessTokenResponse.accessToken;\r\n      const resp = await postToBackend(userMsg.text, accessToken);\r\n\r\n      if (resp.threadId && !threadId) {\r\n        setThreadId(resp.threadId);\r\n      }\r\n\r\n      const assistant = (resp.assistantMessages || []).map((m) => ({\r\n        role: \"assistant\",\r\n        text: m.content\r\n          ? m.content.map((c) => c.text?.value || \"\").join(\"\\n\")\r\n          : m.text || \"\",\r\n        time: m.createdAt\r\n      }));\r\n\r\n      setMessages((m) => [...m, ...assistant]);\r\n    } catch (err) {\r\n      console.error(\"Chat error:\", err);\r\n      setMessages((m) => [\r\n        ...m,\r\n        { role: \"system\", text: `Error: ${err.message}`, time: new Date().toISOString() }\r\n      ]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", flexDirection: \"column\", height: \"70vh\" }}>\r\n      {/* Message history */}\r\n      <div\r\n        style={{\r\n          flex: 1,\r\n          overflowY: \"auto\",\r\n          border: \"1px solid #ccc\",\r\n          borderRadius: 6,\r\n          padding: 12,\r\n          marginBottom: 10\r\n        }}\r\n      >\r\n        {messages.map((m, i) => (\r\n          <div\r\n            key={i}\r\n            style={{\r\n              margin: \"8px 0\",\r\n              textAlign: m.role === \"user\" ? \"right\" : \"left\"\r\n            }}\r\n          >\r\n            <span\r\n              style={{\r\n                display: \"inline-block\",\r\n                background: m.role === \"user\" ? \"#0078d7\" : \"#f3f2f1\",\r\n                color: m.role === \"user\" ? \"white\" : \"black\",\r\n                padding: \"8px 12px\",\r\n                borderRadius: 12,\r\n                maxWidth: \"75%\",\r\n                wordBreak: \"break-word\"\r\n              }}\r\n            >\r\n              <ReactMarkdown>\r\n                {m.text}\r\n              </ReactMarkdown>\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Input area */}\r\n      <div style={{ display: \"flex\", gap: 8 }}>\r\n        <input\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          style={{ flex: 1, padding: \"8px\" }}\r\n          onKeyDown={(e) => e.key === \"Enter\" && send()}\r\n          placeholder=\"Type a message...\"\r\n        />\r\n        <button onClick={send} disabled={loading}>\r\n          {loading ? \"Sending...\" : \"Send\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}