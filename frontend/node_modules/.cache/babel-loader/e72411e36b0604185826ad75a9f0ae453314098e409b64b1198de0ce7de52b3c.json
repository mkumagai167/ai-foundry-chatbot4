{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { toPipelineRequest, toWebResourceLike } from \"../util.js\";\nimport { toCompatResponse, toPipelineResponse } from \"../response.js\";\n/**\n * An enum for compatibility with RequestPolicy\n */\nexport var HttpPipelineLogLevel;\n(function (HttpPipelineLogLevel) {\n  HttpPipelineLogLevel[HttpPipelineLogLevel[\"ERROR\"] = 1] = \"ERROR\";\n  HttpPipelineLogLevel[HttpPipelineLogLevel[\"INFO\"] = 3] = \"INFO\";\n  HttpPipelineLogLevel[HttpPipelineLogLevel[\"OFF\"] = 0] = \"OFF\";\n  HttpPipelineLogLevel[HttpPipelineLogLevel[\"WARNING\"] = 2] = \"WARNING\";\n})(HttpPipelineLogLevel || (HttpPipelineLogLevel = {}));\nconst mockRequestPolicyOptions = {\n  log(_logLevel, _message) {\n    /* do nothing */\n  },\n  shouldLog(_logLevel) {\n    return false;\n  }\n};\n/**\n * The name of the RequestPolicyFactoryPolicy\n */\nexport const requestPolicyFactoryPolicyName = \"RequestPolicyFactoryPolicy\";\n/**\n * A policy that wraps policies written for core-http.\n * @param factories - An array of `RequestPolicyFactory` objects from a core-http pipeline\n */\nexport function createRequestPolicyFactoryPolicy(factories) {\n  const orderedFactories = factories.slice().reverse();\n  return {\n    name: requestPolicyFactoryPolicyName,\n    async sendRequest(request, next) {\n      let httpPipeline = {\n        async sendRequest(httpRequest) {\n          const response = await next(toPipelineRequest(httpRequest));\n          return toCompatResponse(response, {\n            createProxy: true\n          });\n        }\n      };\n      for (const factory of orderedFactories) {\n        httpPipeline = factory.create(httpPipeline, mockRequestPolicyOptions);\n      }\n      const webResourceLike = toWebResourceLike(request, {\n        createProxy: true\n      });\n      const response = await httpPipeline.sendRequest(webResourceLike);\n      return toPipelineResponse(response);\n    }\n  };\n}","map":{"version":3,"names":["toPipelineRequest","toWebResourceLike","toCompatResponse","toPipelineResponse","HttpPipelineLogLevel","mockRequestPolicyOptions","log","_logLevel","_message","shouldLog","requestPolicyFactoryPolicyName","createRequestPolicyFactoryPolicy","factories","orderedFactories","slice","reverse","name","sendRequest","request","next","httpPipeline","httpRequest","response","createProxy","factory","create","webResourceLike"],"sources":["C:\\Users\\M.Kumagai\\Documents\\React\\ai-foundry-chatbot4\\frontend\\node_modules\\@azure\\core-http-compat\\src\\policies\\requestPolicyFactoryPolicy.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  PipelinePolicy,\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest,\n} from \"@azure/core-rest-pipeline\";\nimport type { WebResourceLike } from \"../util.js\";\nimport { toPipelineRequest, toWebResourceLike } from \"../util.js\";\nimport type { CompatResponse } from \"../response.js\";\nimport { toCompatResponse, toPipelineResponse } from \"../response.js\";\n\n/**\n * A compatible interface for core-http request policies\n */\nexport interface RequestPolicy {\n  sendRequest(httpRequest: WebResourceLike): Promise<CompatResponse>;\n}\n\n/**\n * An enum for compatibility with RequestPolicy\n */\nexport enum HttpPipelineLogLevel {\n  ERROR = 1,\n  INFO = 3,\n  OFF = 0,\n  WARNING = 2,\n}\n\n/**\n * An interface for compatibility with RequestPolicy\n */\nexport interface RequestPolicyOptionsLike {\n  log(logLevel: HttpPipelineLogLevel, message: string): void;\n  shouldLog(logLevel: HttpPipelineLogLevel): boolean;\n}\n\nconst mockRequestPolicyOptions: RequestPolicyOptionsLike = {\n  log(_logLevel: HttpPipelineLogLevel, _message: string): void {\n    /* do nothing */\n  },\n  shouldLog(_logLevel: HttpPipelineLogLevel): boolean {\n    return false;\n  },\n};\n\n/**\n * An interface for compatibility with core-http's RequestPolicyFactory\n */\nexport interface RequestPolicyFactory {\n  create(nextPolicy: RequestPolicy, options: RequestPolicyOptionsLike): RequestPolicy;\n}\n\n/**\n * The name of the RequestPolicyFactoryPolicy\n */\nexport const requestPolicyFactoryPolicyName = \"RequestPolicyFactoryPolicy\";\n\n/**\n * A policy that wraps policies written for core-http.\n * @param factories - An array of `RequestPolicyFactory` objects from a core-http pipeline\n */\nexport function createRequestPolicyFactoryPolicy(\n  factories: RequestPolicyFactory[],\n): PipelinePolicy {\n  const orderedFactories = factories.slice().reverse();\n\n  return {\n    name: requestPolicyFactoryPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      let httpPipeline: RequestPolicy = {\n        async sendRequest(httpRequest) {\n          const response = await next(toPipelineRequest(httpRequest));\n          return toCompatResponse(response, { createProxy: true });\n        },\n      };\n      for (const factory of orderedFactories) {\n        httpPipeline = factory.create(httpPipeline, mockRequestPolicyOptions);\n      }\n\n      const webResourceLike = toWebResourceLike(request, { createProxy: true });\n      const response = await httpPipeline.sendRequest(webResourceLike);\n      return toPipelineResponse(response);\n    },\n  };\n}\n"],"mappings":"AAAA;AACA;AASA,SAASA,iBAAiB,EAAEC,iBAAiB,QAAQ,YAAY;AAEjE,SAASC,gBAAgB,EAAEC,kBAAkB,QAAQ,gBAAgB;AASrE;;;AAGA,WAAYC,oBAKX;AALD,WAAYA,oBAAoB;EAC9BA,oBAAA,CAAAA,oBAAA,wBAAS;EACTA,oBAAA,CAAAA,oBAAA,sBAAQ;EACRA,oBAAA,CAAAA,oBAAA,oBAAO;EACPA,oBAAA,CAAAA,oBAAA,4BAAW;AACb,CAAC,EALWA,oBAAoB,KAApBA,oBAAoB;AAehC,MAAMC,wBAAwB,GAA6B;EACzDC,GAAGA,CAACC,SAA+B,EAAEC,QAAgB;IACnD;EAAA,CACD;EACDC,SAASA,CAACF,SAA+B;IACvC,OAAO,KAAK;EACd;CACD;AASD;;;AAGA,OAAO,MAAMG,8BAA8B,GAAG,4BAA4B;AAE1E;;;;AAIA,OAAM,SAAUC,gCAAgCA,CAC9CC,SAAiC;EAEjC,MAAMC,gBAAgB,GAAGD,SAAS,CAACE,KAAK,EAAE,CAACC,OAAO,EAAE;EAEpD,OAAO;IACLC,IAAI,EAAEN,8BAA8B;IACpC,MAAMO,WAAWA,CAACC,OAAwB,EAAEC,IAAiB;MAC3D,IAAIC,YAAY,GAAkB;QAChC,MAAMH,WAAWA,CAACI,WAAW;UAC3B,MAAMC,QAAQ,GAAG,MAAMH,IAAI,CAACnB,iBAAiB,CAACqB,WAAW,CAAC,CAAC;UAC3D,OAAOnB,gBAAgB,CAACoB,QAAQ,EAAE;YAAEC,WAAW,EAAE;UAAI,CAAE,CAAC;QAC1D;OACD;MACD,KAAK,MAAMC,OAAO,IAAIX,gBAAgB,EAAE;QACtCO,YAAY,GAAGI,OAAO,CAACC,MAAM,CAACL,YAAY,EAAEf,wBAAwB,CAAC;MACvE;MAEA,MAAMqB,eAAe,GAAGzB,iBAAiB,CAACiB,OAAO,EAAE;QAAEK,WAAW,EAAE;MAAI,CAAE,CAAC;MACzE,MAAMD,QAAQ,GAAG,MAAMF,YAAY,CAACH,WAAW,CAACS,eAAe,CAAC;MAChE,OAAOvB,kBAAkB,CAACmB,QAAQ,CAAC;IACrC;GACD;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}