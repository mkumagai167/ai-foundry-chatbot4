{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { AbortError } from \"@azure/abort-controller\";\n/**\n * Creates an abortable promise.\n * @param buildPromise - A function that takes the resolve and reject functions as parameters.\n * @param options - The options for the abortable promise.\n * @returns A promise that can be aborted.\n */\nexport function createAbortablePromise(buildPromise, options) {\n  const {\n    cleanupBeforeAbort,\n    abortSignal,\n    abortErrorMsg\n  } = options ?? {};\n  return new Promise((resolve, reject) => {\n    function rejectOnAbort() {\n      reject(new AbortError(abortErrorMsg ?? \"The operation was aborted.\"));\n    }\n    function removeListeners() {\n      abortSignal?.removeEventListener(\"abort\", onAbort);\n    }\n    function onAbort() {\n      cleanupBeforeAbort?.();\n      removeListeners();\n      rejectOnAbort();\n    }\n    if (abortSignal?.aborted) {\n      return rejectOnAbort();\n    }\n    try {\n      buildPromise(x => {\n        removeListeners();\n        resolve(x);\n      }, x => {\n        removeListeners();\n        reject(x);\n      });\n    } catch (err) {\n      reject(err);\n    }\n    abortSignal?.addEventListener(\"abort\", onAbort);\n  });\n}","map":{"version":3,"names":["AbortError","createAbortablePromise","buildPromise","options","cleanupBeforeAbort","abortSignal","abortErrorMsg","Promise","resolve","reject","rejectOnAbort","removeListeners","removeEventListener","onAbort","aborted","x","err","addEventListener"],"sources":["C:\\Users\\M.Kumagai\\Documents\\React\\ai-foundry-chatbot4\\frontend\\node_modules\\@azure\\core-util\\src\\createAbortablePromise.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { AbortError } from \"@azure/abort-controller\";\nimport type { AbortOptions } from \"./aborterUtils.js\";\n\n/**\n * Options for the createAbortablePromise function.\n */\nexport interface CreateAbortablePromiseOptions extends AbortOptions {\n  /** A function to be called if the promise was aborted */\n  cleanupBeforeAbort?: () => void;\n}\n\n/**\n * Creates an abortable promise.\n * @param buildPromise - A function that takes the resolve and reject functions as parameters.\n * @param options - The options for the abortable promise.\n * @returns A promise that can be aborted.\n */\nexport function createAbortablePromise<T>(\n  buildPromise: (\n    resolve: (value: T | PromiseLike<T>) => void,\n    reject: (reason?: any) => void,\n  ) => void,\n  options?: CreateAbortablePromiseOptions,\n): Promise<T> {\n  const { cleanupBeforeAbort, abortSignal, abortErrorMsg } = options ?? {};\n  return new Promise((resolve, reject) => {\n    function rejectOnAbort(): void {\n      reject(new AbortError(abortErrorMsg ?? \"The operation was aborted.\"));\n    }\n    function removeListeners(): void {\n      abortSignal?.removeEventListener(\"abort\", onAbort);\n    }\n    function onAbort(): void {\n      cleanupBeforeAbort?.();\n      removeListeners();\n      rejectOnAbort();\n    }\n    if (abortSignal?.aborted) {\n      return rejectOnAbort();\n    }\n    try {\n      buildPromise(\n        (x) => {\n          removeListeners();\n          resolve(x);\n        },\n        (x) => {\n          removeListeners();\n          reject(x);\n        },\n      );\n    } catch (err) {\n      reject(err);\n    }\n    abortSignal?.addEventListener(\"abort\", onAbort);\n  });\n}\n"],"mappings":"AAAA;AACA;AAEA,SAASA,UAAU,QAAQ,yBAAyB;AAWpD;;;;;;AAMA,OAAM,SAAUC,sBAAsBA,CACpCC,YAGS,EACTC,OAAuC;EAEvC,MAAM;IAAEC,kBAAkB;IAAEC,WAAW;IAAEC;EAAa,CAAE,GAAGH,OAAO,IAAI,EAAE;EACxE,OAAO,IAAII,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;IACrC,SAASC,aAAaA,CAAA;MACpBD,MAAM,CAAC,IAAIT,UAAU,CAACM,aAAa,IAAI,4BAA4B,CAAC,CAAC;IACvE;IACA,SAASK,eAAeA,CAAA;MACtBN,WAAW,EAAEO,mBAAmB,CAAC,OAAO,EAAEC,OAAO,CAAC;IACpD;IACA,SAASA,OAAOA,CAAA;MACdT,kBAAkB,GAAE,CAAE;MACtBO,eAAe,EAAE;MACjBD,aAAa,EAAE;IACjB;IACA,IAAIL,WAAW,EAAES,OAAO,EAAE;MACxB,OAAOJ,aAAa,EAAE;IACxB;IACA,IAAI;MACFR,YAAY,CACTa,CAAC,IAAI;QACJJ,eAAe,EAAE;QACjBH,OAAO,CAACO,CAAC,CAAC;MACZ,CAAC,EACAA,CAAC,IAAI;QACJJ,eAAe,EAAE;QACjBF,MAAM,CAACM,CAAC,CAAC;MACX,CAAC,CACF;IACH,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZP,MAAM,CAACO,GAAG,CAAC;IACb;IACAX,WAAW,EAAEY,gBAAgB,CAAC,OAAO,EAAEJ,OAAO,CAAC;EACjD,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}