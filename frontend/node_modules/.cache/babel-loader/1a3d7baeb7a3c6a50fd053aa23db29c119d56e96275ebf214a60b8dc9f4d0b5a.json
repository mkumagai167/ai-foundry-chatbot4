{"ast":null,"code":"// frontend/src/services/api.js\nexport async function postToBackend(message, accessToken) {\n  try {\n    const response = await fetch(\"http://localhost:7071/api/runAgent\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${accessToken}`\n      },\n      body: JSON.stringify({\n        message\n      })\n    });\n    if (!response.ok) {\n      throw new Error(`Backend error: ${response.status}`);\n    }\n    return await response.json();\n  } catch (err) {\n    console.error(\"postToBackend error:\", err);\n    throw err;\n  }\n}","map":{"version":3,"names":["postToBackend","message","accessToken","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","json","err","console","error"],"sources":["C:/Users/M.Kumagai/Documents/React/ai-foundry-chatbot4/frontend/src/services/api.js"],"sourcesContent":["// frontend/src/services/api.js\r\nexport async function postToBackend(message, accessToken) {\r\n  try {\r\n    const response = await fetch(\"http://localhost:7071/api/runAgent\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": `Bearer ${accessToken}`\r\n      },\r\n      body: JSON.stringify({ message })\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Backend error: ${response.status}`);\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (err) {\r\n    console.error(\"postToBackend error:\", err);\r\n    throw err;\r\n  }\r\n}\r\n"],"mappings":"AAAA;AACA,OAAO,eAAeA,aAAaA,CAACC,OAAO,EAAEC,WAAW,EAAE;EACxD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;MACjEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,UAAUJ,WAAW;MACxC,CAAC;MACDK,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER;MAAQ,CAAC;IAClC,CAAC,CAAC;IAEF,IAAI,CAACE,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,kBAAkBR,QAAQ,CAACS,MAAM,EAAE,CAAC;IACtD;IAEA,OAAO,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,GAAG,CAAC;IAC1C,MAAMA,GAAG;EACX;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}