{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * The programmatic identifier of the ndJsonPolicy.\n */\nexport const ndJsonPolicyName = \"ndJsonPolicy\";\n/**\n * ndJsonPolicy is a policy used to control keep alive settings for every request.\n */\nexport function ndJsonPolicy() {\n  return {\n    name: ndJsonPolicyName,\n    async sendRequest(request, next) {\n      // There currently isn't a good way to bypass the serializer\n      if (typeof request.body === \"string\" && request.body.startsWith(\"[\")) {\n        const body = JSON.parse(request.body);\n        if (Array.isArray(body)) {\n          request.body = body.map(item => JSON.stringify(item) + \"\\n\").join(\"\");\n        }\n      }\n      return next(request);\n    }\n  };\n}","map":{"version":3,"names":["ndJsonPolicyName","ndJsonPolicy","name","sendRequest","request","next","body","startsWith","JSON","parse","Array","isArray","map","item","stringify","join"],"sources":["C:\\Users\\M.Kumagai\\Documents\\React\\ai-foundry-chatbot4\\frontend\\node_modules\\@azure\\core-rest-pipeline\\src\\policies\\ndJsonPolicy.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\n\n/**\n * The programmatic identifier of the ndJsonPolicy.\n */\nexport const ndJsonPolicyName = \"ndJsonPolicy\";\n\n/**\n * ndJsonPolicy is a policy used to control keep alive settings for every request.\n */\nexport function ndJsonPolicy(): PipelinePolicy {\n  return {\n    name: ndJsonPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      // There currently isn't a good way to bypass the serializer\n      if (typeof request.body === \"string\" && request.body.startsWith(\"[\")) {\n        const body = JSON.parse(request.body);\n        if (Array.isArray(body)) {\n          request.body = body.map((item) => JSON.stringify(item) + \"\\n\").join(\"\");\n        }\n      }\n      return next(request);\n    },\n  };\n}\n"],"mappings":"AAAA;AACA;AAKA;;;AAGA,OAAO,MAAMA,gBAAgB,GAAG,cAAc;AAE9C;;;AAGA,OAAM,SAAUC,YAAYA,CAAA;EAC1B,OAAO;IACLC,IAAI,EAAEF,gBAAgB;IACtB,MAAMG,WAAWA,CAACC,OAAwB,EAAEC,IAAiB;MAC3D;MACA,IAAI,OAAOD,OAAO,CAACE,IAAI,KAAK,QAAQ,IAAIF,OAAO,CAACE,IAAI,CAACC,UAAU,CAAC,GAAG,CAAC,EAAE;QACpE,MAAMD,IAAI,GAAGE,IAAI,CAACC,KAAK,CAACL,OAAO,CAACE,IAAI,CAAC;QACrC,IAAII,KAAK,CAACC,OAAO,CAACL,IAAI,CAAC,EAAE;UACvBF,OAAO,CAACE,IAAI,GAAGA,IAAI,CAACM,GAAG,CAAEC,IAAI,IAAKL,IAAI,CAACM,SAAS,CAACD,IAAI,CAAC,GAAG,IAAI,CAAC,CAACE,IAAI,CAAC,EAAE,CAAC;QACzE;MACF;MACA,OAAOV,IAAI,CAACD,OAAO,CAAC;IACtB;GACD;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}