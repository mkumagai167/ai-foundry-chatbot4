{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { proxyPolicy as tspProxyPolicy, proxyPolicyName as tspProxyPolicyName, getDefaultProxySettings as tspGetDefaultProxySettings } from \"@typespec/ts-http-runtime/internal/policies\";\n/**\n * The programmatic identifier of the proxyPolicy.\n */\nexport const proxyPolicyName = tspProxyPolicyName;\n/**\n * This method converts a proxy url into `ProxySettings` for use with ProxyPolicy.\n * If no argument is given, it attempts to parse a proxy URL from the environment\n * variables `HTTPS_PROXY` or `HTTP_PROXY`.\n * @param proxyUrl - The url of the proxy to use. May contain authentication information.\n * @deprecated - Internally this method is no longer necessary when setting proxy information.\n */\nexport function getDefaultProxySettings(proxyUrl) {\n  return tspGetDefaultProxySettings(proxyUrl);\n}\n/**\n * A policy that allows one to apply proxy settings to all requests.\n * If not passed static settings, they will be retrieved from the HTTPS_PROXY\n * or HTTP_PROXY environment variables.\n * @param proxySettings - ProxySettings to use on each request.\n * @param options - additional settings, for example, custom NO_PROXY patterns\n */\nexport function proxyPolicy(proxySettings, options) {\n  return tspProxyPolicy(proxySettings, options);\n}","map":{"version":3,"names":["proxyPolicy","tspProxyPolicy","proxyPolicyName","tspProxyPolicyName","getDefaultProxySettings","tspGetDefaultProxySettings","proxyUrl","proxySettings","options"],"sources":["C:\\Users\\M.Kumagai\\Documents\\React\\ai-foundry-chatbot4\\frontend\\node_modules\\@azure\\core-rest-pipeline\\src\\policies\\proxyPolicy.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { ProxySettings } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\n\nimport {\n  proxyPolicy as tspProxyPolicy,\n  proxyPolicyName as tspProxyPolicyName,\n  getDefaultProxySettings as tspGetDefaultProxySettings,\n} from \"@typespec/ts-http-runtime/internal/policies\";\n\n/**\n * The programmatic identifier of the proxyPolicy.\n */\nexport const proxyPolicyName = tspProxyPolicyName;\n\n/**\n * This method converts a proxy url into `ProxySettings` for use with ProxyPolicy.\n * If no argument is given, it attempts to parse a proxy URL from the environment\n * variables `HTTPS_PROXY` or `HTTP_PROXY`.\n * @param proxyUrl - The url of the proxy to use. May contain authentication information.\n * @deprecated - Internally this method is no longer necessary when setting proxy information.\n */\nexport function getDefaultProxySettings(proxyUrl?: string): ProxySettings | undefined {\n  return tspGetDefaultProxySettings(proxyUrl);\n}\n\n/**\n * A policy that allows one to apply proxy settings to all requests.\n * If not passed static settings, they will be retrieved from the HTTPS_PROXY\n * or HTTP_PROXY environment variables.\n * @param proxySettings - ProxySettings to use on each request.\n * @param options - additional settings, for example, custom NO_PROXY patterns\n */\nexport function proxyPolicy(\n  proxySettings?: ProxySettings,\n  options?: {\n    /** a list of patterns to override those loaded from NO_PROXY environment variable. */\n    customNoProxyList?: string[];\n  },\n): PipelinePolicy {\n  return tspProxyPolicy(proxySettings, options);\n}\n"],"mappings":"AAAA;AACA;AAKA,SACEA,WAAW,IAAIC,cAAc,EAC7BC,eAAe,IAAIC,kBAAkB,EACrCC,uBAAuB,IAAIC,0BAA0B,QAChD,6CAA6C;AAEpD;;;AAGA,OAAO,MAAMH,eAAe,GAAGC,kBAAkB;AAEjD;;;;;;;AAOA,OAAM,SAAUC,uBAAuBA,CAACE,QAAiB;EACvD,OAAOD,0BAA0B,CAACC,QAAQ,CAAC;AAC7C;AAEA;;;;;;;AAOA,OAAM,SAAUN,WAAWA,CACzBO,aAA6B,EAC7BC,OAGC;EAED,OAAOP,cAAc,CAACM,aAAa,EAAEC,OAAO,CAAC;AAC/C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}