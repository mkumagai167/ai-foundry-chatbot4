{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * A static-key-based credential that supports updating\n * the underlying key value.\n */\nexport class AzureKeyCredential {\n  _key;\n  /**\n   * The value of the key to be used in authentication\n   */\n  get key() {\n    return this._key;\n  }\n  /**\n   * Create an instance of an AzureKeyCredential for use\n   * with a service client.\n   *\n   * @param key - The initial value of the key to use in authentication\n   */\n  constructor(key) {\n    if (!key) {\n      throw new Error(\"key must be a non-empty string\");\n    }\n    this._key = key;\n  }\n  /**\n   * Change the value of the key.\n   *\n   * Updates will take effect upon the next request after\n   * updating the key value.\n   *\n   * @param newKey - The new key value to be used\n   */\n  update(newKey) {\n    this._key = newKey;\n  }\n}","map":{"version":3,"names":["AzureKeyCredential","_key","key","constructor","Error","update","newKey"],"sources":["C:\\Users\\M.Kumagai\\Documents\\React\\ai-foundry-chatbot4\\frontend\\node_modules\\@azure\\core-auth\\src\\azureKeyCredential.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { KeyCredential } from \"./keyCredential.js\";\n\n/**\n * A static-key-based credential that supports updating\n * the underlying key value.\n */\nexport class AzureKeyCredential implements KeyCredential {\n  private _key: string;\n\n  /**\n   * The value of the key to be used in authentication\n   */\n  public get key(): string {\n    return this._key;\n  }\n\n  /**\n   * Create an instance of an AzureKeyCredential for use\n   * with a service client.\n   *\n   * @param key - The initial value of the key to use in authentication\n   */\n  constructor(key: string) {\n    if (!key) {\n      throw new Error(\"key must be a non-empty string\");\n    }\n\n    this._key = key;\n  }\n\n  /**\n   * Change the value of the key.\n   *\n   * Updates will take effect upon the next request after\n   * updating the key value.\n   *\n   * @param newKey - The new key value to be used\n   */\n  public update(newKey: string): void {\n    this._key = newKey;\n  }\n}\n"],"mappings":"AAAA;AACA;AAIA;;;;AAIA,OAAM,MAAOA,kBAAkB;EACrBC,IAAI;EAEZ;;;EAGA,IAAWC,GAAGA,CAAA;IACZ,OAAO,IAAI,CAACD,IAAI;EAClB;EAEA;;;;;;EAMAE,YAAYD,GAAW;IACrB,IAAI,CAACA,GAAG,EAAE;MACR,MAAM,IAAIE,KAAK,CAAC,gCAAgC,CAAC;IACnD;IAEA,IAAI,CAACH,IAAI,GAAGC,GAAG;EACjB;EAEA;;;;;;;;EAQOG,MAAMA,CAACC,MAAc;IAC1B,IAAI,CAACL,IAAI,GAAGK,MAAM;EACpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}