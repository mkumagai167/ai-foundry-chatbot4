{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { isObject } from \"./object.js\";\n/**\n * Typeguard for an error object shape (has name and message)\n * @param e - Something caught by a catch clause.\n */\nexport function isError(e) {\n  if (isObject(e)) {\n    const hasName = typeof e.name === \"string\";\n    const hasMessage = typeof e.message === \"string\";\n    return hasName && hasMessage;\n  }\n  return false;\n}","map":{"version":3,"names":["isObject","isError","e","hasName","name","hasMessage","message"],"sources":["C:\\Users\\M.Kumagai\\Documents\\React\\ai-foundry-chatbot4\\frontend\\node_modules\\@typespec\\ts-http-runtime\\src\\util\\error.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { isObject } from \"./object.js\";\n\n/**\n * Typeguard for an error object shape (has name and message)\n * @param e - Something caught by a catch clause.\n */\nexport function isError(e: unknown): e is Error {\n  if (isObject(e)) {\n    const hasName = typeof e.name === \"string\";\n    const hasMessage = typeof e.message === \"string\";\n    return hasName && hasMessage;\n  }\n  return false;\n}\n"],"mappings":"AAAA;AACA;AAEA,SAASA,QAAQ,QAAQ,aAAa;AAEtC;;;;AAIA,OAAM,SAAUC,OAAOA,CAACC,CAAU;EAChC,IAAIF,QAAQ,CAACE,CAAC,CAAC,EAAE;IACf,MAAMC,OAAO,GAAG,OAAOD,CAAC,CAACE,IAAI,KAAK,QAAQ;IAC1C,MAAMC,UAAU,GAAG,OAAOH,CAAC,CAACI,OAAO,KAAK,QAAQ;IAChD,OAAOH,OAAO,IAAIE,UAAU;EAC9B;EACA,OAAO,KAAK;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}